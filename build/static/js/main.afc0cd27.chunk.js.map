{"version":3,"sources":["data/reducers/homeReducer.js","common/constants/actionTypes.js","data/reducers/sensor.js","data/reducers/mapListCommunication.js","data/reducers/dbInteraction.js","data/reducers/notification.js","redux/reducer/index.js","data/sagas/homeSaga.js","data/actions/sensor/sensorActions.js","data/api/sensor/mockSensors.js","data/api/sensor/sensorApi.js","data/sagas/sensor/sensorSagas.js","data/sagas/sensor/index.js","data/actions/dbActions.js","data/api/db/dbApi.js","data/sagas/db/dbInteractionSaga.js","data/sagas/db/index.js","data/api/notification/fetchNotifications.js","data/actions/notification/notificationActions.js","data/sagas/notification/notificationSagas.js","data/sagas/notification/index.js","redux/saga/index.js","store.js","components/UI/LanguageSelect/LanguageSelect.jsx","components/UI/LanguageSelect/index.js","components/UI/NotificationDrawer/timeConverter.js","components/Dashboard/SensorsList/helpers.js","common/constants/sensorsInfo.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/LightSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/StoveSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/SmokeSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/TemperatureSensorValue.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/WindowBlindsSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/WindowSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/TemperatureSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphics/UnknownSensorIcon.js","components/Dashboard/SmartHomeMap/Map/Sensor/SensorGraphicComponent.jsx","components/UI/NotificationDrawer/NotificationDrawerItem.jsx","components/UI/NotificationDrawer/NotificationDrawerList.jsx","components/UI/NotificationDrawer/index.js","components/UI/NotificationDrawer/NotificationDrawer.jsx","components/Notifications/notificationFilter.js","components/Navigation/NavigationBar/Header/Header.jsx","components/Navigation/NavigationBar/Header/index.js","components/Navigation/NavigationBar/Navigation/Navigation.jsx","components/Navigation/NavigationBar/Navigation/index.js","components/UI/Snackbars/ConnectionWarningSnackbar/index.js","components/UI/Snackbars/ConnectionWarningSnackbar/WarningSnackbar.jsx","components/UI/Snackbars/CustomSnackbarProvider/CustomSnackbarProvider.jsx","components/UI/Snackbars/CustomSnackbarProvider/index.js","views/Layout.jsx","data/actions/mapListCommunicationActions.js","common/assets/house.svg","components/Dashboard/SmartHomeMap/Map/Sensor/helpers.js","components/Dashboard/SmartHomeMap/Map/Sensor/Sensor.jsx","components/Dashboard/SmartHomeMap/Map/Sensor/index.js","components/Dashboard/SmartHomeMap/Map/MapModal/index.js","components/Dashboard/SmartHomeMap/Map/MapModal/MapModal.jsx","components/Dashboard/SmartHomeMap/Map/helpers.js","components/Dashboard/SmartHomeMap/Map/Map.jsx","components/Dashboard/SmartHomeMap/Map/index.js","components/Dashboard/SmartHomeMap/SmartHomeMap.jsx","components/Dashboard/SmartHomeMap/index.js","components/Dashboard/SensorsList/ItemInfo/LightItemInfo.js","components/Dashboard/SensorsList/ItemInfo/StoveSensorItemInfo.js","components/Dashboard/SensorsList/ItemInfo/SmokeSensorItemInfo.js","components/Dashboard/SensorsList/ItemInfo/TemperatureSensorItemInfo.js","components/Dashboard/SensorsList/ItemInfo/WindowBlindsItemInfo.js","components/Dashboard/SensorsList/ItemInfo/WindowSensorItemInfo.js","components/Dashboard/SensorsList/ItemDetails/LightItemDetails.js","components/Dashboard/SensorsList/ItemDetails/WindowBlindsItemDetails.js","components/Dashboard/SensorsList/ItemDetails/StoveItemDetails.js","components/Dashboard/SensorsList/Item.jsx","components/UI/Modals/DeleteModal/index.js","components/UI/Modals/DeleteModal/DeleteModal.jsx","components/Dashboard/SensorsList/SensorsList.jsx","components/Dashboard/SensorsList/index.js","components/UI/Spinner/Spinner.jsx","components/UI/Spinner/index.js","components/UI/Page404/Page404.jsx","components/UI/Page404/index.js","components/UI/Snackbars/SensorsWarning/index.js","components/UI/Snackbars/SensorsWarning/SensorsWarning.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Notifications/Notifications.jsx","components/Notifications/index.js","common/locales/index.js","i18n.js","common/constants/theme.js","app.js","index.jsx"],"names":["initialState","data","sensors","loadingSensors","loadingError","sensorError","refreshError","lightDetailsError","windowBlindsDetailsError","stoveDetailsError","updateError","updating","fetchSensorsStart","state","action","fetchSensorsSuccess","temperatureSensors","windowSensors","windowBlinds","stoveSensors","smokeSensors","lights","updateSensorsStart","updateSensorsSuccess","updateSensorsFail","fetchSensorsFail","error","refreshSensorsStart","refreshSensorsSuccess","refreshSensorsFail","changeLightSensorDetailsStart","changeLightSensorDetailsSuccess","changeLightSensorDetailsFail","changeWindowBlindsSensorDetailsStart","changeWindowBlindsSensorDetailsSuccess","changeWindowBlindsSensorDetailsFail","changeStoveSensorDetailsStart","changeStoveSensorDetailsSuccess","changeStoveSensorDetailsFail","listItemPressed","mapPointPressed","pressedItemId","undefined","waitingForSensorLocation","sensorColor","sensorBorderColor","sensorData","listClicked","isOnMap","id","mapClicked","pointClicked","_id","type","mapPosition","addingPoint","addError","removeError","removeSuccess","addErrorPoints","removeErrorPoints","addPointStart","sensorType","Array","from","Set","addPointSuccess","filter","p","addPointFail","updateAddErrorPoints","removePointStart","removePointSuccess","removePointFail","updateRemoveErrorPoints","notifications","fetchError","fetching","isDrawerOpen","checking","notificationContent","checkError","combineReducers","home","sensor","actionTypes","mapListCommunication","dbInteraction","notification","homeLoadedSaga","watchHome","console","log","takeLatest","loadSensors","updateSensors","changeStoveSensorDetails","stoveSensorDetails","mockSensors","value","x","y","status","position","timer","hour","min","temperature","watt","uptime","power","level","mode","overheat","isSmokeDetected","hue","saturation","getSensors","refreshSensors","changeLightDetails","changeWindowBlindsDetails","changeStoveDetails","config","headers","axios","post","res","ret","devices","i","length","obj","push","lightSensorDetails","windowBlindsSensorDetails","loadSensorsSaga","updateSensorsSaga","refreshSensorsSaga","changeLightSensorDetailsSaga","changeWindowBlindsSensorDetailsSaga","changeStoveSensorDetailsSaga","put","call","actions","delay","select","watchSensors","dbAddPointStart","dbAddPointSuccess","dbAddPointFail","dbRemovePointStart","dbRemovePointSuccess","dbRemovePointFail","dbUpdateRemoveErrorPoints","addMapPoint","removeMapPoint","dbAddPointSaga","dbRemovePointSaga","watchDB","fetchNotifications","checkNotifications","get","delete","result","checkNotificationsSuccess","checkNotificationsFail","fetchNotificationsSaga","updateNotificationsSaga","checkNotificationsSaga","sortNotifications","sort","a","b","timestamp","store","checked","n","indexOf","isChecked","watchNotifications","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","root","background","whiteColor","color","padding","LanguageSelect","i18n","useTranslation","closeSnackbar","useSnackbar","React","useState","language","setLanguage","changeLanguage","lang","localStorage","setItem","classes","FormControl","className","variant","Select","onChange","e","target","displayEmpty","icon","inputProps","MenuItem","timeConverter","Date","toLocaleString","isSensorsListEmpty","sensorsList","key","ItemDisplayedName","t","sensorNames","TEMPERATURE_SENSOR","windowSensor","windowBlind","stoveSensor","smokeSensor","LED_CONTROLLER","led","getSensorDisplayedName","sensorsInfo","colorLight","colorDark","props","size","fontSize","LightSensorInner","faLightbulb","StoveSensorInner","smokePulse","animationName","animationDuration","animationIterationCount","animationTimingFunction","transform","SmokeSensorInner","faSmog","fontWeight","textAlign","verticalAlign","TemperatureSensorInner","toString","getFontSize","Typography","container","inner","top","left","blind","clipPath","WindowBlindsSensorInner","getBlindPositionToDisplay","faSquareFull","WindowSensorInner","TemperatureSensorIcon","faThermometerEmpty","faThermometerQuarter","faThermometerHalf","faThermometerThreeQuarters","faThermometerFull","UnknownSensorIcon","faQuestion","drawSensorGraphicComponent","TEMPERATURE_SENSOR_ICON","close","fontStyle","display","alignItems","justifyContent","marginRight","accentColor","elevation","clicked","transition","cursor","NotificationDrawerItem","sensorId","handleNotificationCheck","handleClick","checkButton","ListItemSecondaryAction","IconButton","role","onClick","event","stopPropagation","onKeyDown","displayedInfo","Paper","square","ListItem","disabled","row","ListItemAvatar","ListItemText","primary","secondary","list","width","NotificationDrawerList","setClicked","List","map","NotificationDrawer","uncheckedNotifications","useSelector","dispatch","useDispatch","useEffect","handleDrawerClose","drawerContent","Box","pt","align","Drawer","anchor","open","onClose","py","px","to","style","textDecoration","Divider","notificationFilter","checkedNotifications","flexGrow","title","tabs","minHeight","buttons","flexDirection","toolbar","paddingTop","LinkTab","Tab","component","Link","checkActive","url","Header","location","useLocation","pathname","setValue","AppBar","Toolbar","Tabs","edge","newValue","indicatorColor","centered","label","Badge","badgeContent","overlap","navigation","zIndex","hide","Navigation","match","useRouteMatch","Grid","item","xs","WarningSnackbar","interval","pingEndpoint","enqueueSnackbar","handleSnackbarEnqueueing","persist","onExiting","handleSnackbarClosing","showSnackbar","response","includes","checkConnection","navigator","onLine","then","catch","setInterval","clearInterval","addEventListener","CustomSnackbarProvider","notistackRef","createRef","onClickDismiss","current","ref","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate","children","pingApiEndpoint","timeout","height","content","boxSizing","backgroundColor","palette","default","Layout","maxwidth","onMapClick","convertHsvToHsl","h","s","v","l","border","borderSize","borderRadius","Sensor","sensorSize","clickDispatch","borderColor","document","querySelector","scrollIntoView","behavior","block","scrollToListItem","onPointClick","isLightSensor","hsl","getLightColor","MapModal","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","fromCoordinateToPercentMapper","offset","mapSize","fromPercentToCoordinateMapper","image","mapDisabled","pointPressed","maxHeight","Map","picRef","useRef","mapHeight","setMapHeight","mapWidth","setMapWidth","modalOpen","setModalOpen","isMapReady","setMapReady","nonMappedSensors","Object","keys","flat","checkListSensorClicked","forEach","newSensors","values","sensorGroup","newMapSensors","handleResize","removeEventListener","nativeEvent","offsetX","offsetY","xCoordinate","yCoordinate","storeSensors","assign","point","Math","abs","clickedSensor","src","house","alt","onLoad","prototype","hasOwnProperty","validPointData","round","mapBackground","mapContainer","maxWidth","objectFit","SmartHomeMap","justify","LightItemInfo","handleRemoveClick","StoveSensorItemInfo","SmokeSensorItemInfo","TemperatureSensorItemInfo","WindowBlindsItemInfo","WindowSensorItem","hsv","hueSlider","backgroundImage","saturationSlider","valueSlider","button","marginTop","CustomSlider","withStyles","marginBottom","outline","main","rail","thumb","borderLeft","borderRight","borderTop","borderBottom","marginLeft","Slider","CustomButton","contained","getContrastText","paper","handleChangeExpanded","setHue","setSaturation","originalSensorData","setOriginalSensorData","gutterBottom","val","valueLabelDisplay","max","track","changeLightSensorDetails","buttonText","WindowBlindsItemDetails","setPosition","defaultValue","windowBlindsDetails","buttonGroup","textBox","fontFamily","temperatureLevel","wattLevel","StoveItemInfo","setTimer","setTemperature","setWatt","setUptime","setPower","setLevel","setMode","setOverheat","radioValue","setRadioValue","hasSensorDataChanged","dispatchStoveDetailsChangePower","index","dispatchStoveDetailsChangeLevel","amount","RadioGroup","FormControlLabel","control","Radio","idx","alighItems","ExpansionPanel","overflowX","expanded","MuiExpansionPanel","ExpansionPanelDetails","MuiExpansionPanelDetails","ExpansionPanelSummary","expandIcon","MuiExpansionPanelSummary","drawItemInfo","isSensorEditable","Item","onListClick","bgColor","expansionPanelDetails","itemDetails","drawExpansionPanelDetails","handleListItemClick","handleCloseClick","DeleteModal","handleCancel","handleOk","disableBackdropClick","disableEscapeKeyDown","sidebarHeight","level2","drawItems","keyName","SensorsList","useWindowSize","activeModal","setActiveModal","connectedSensors","notConnectedSensors","divideSensors","setExpanded","panel","isExpanded","overflow","subheader","ListSubheader","disableSticky","listSubheader","Spinner","CircularProgress","errorMessage","handlePageRefresh","reload","Page404","endIcon","SensorsWarning","Dashboard","Notifications","loadUnchecked","setLoadUnchecked","loadChecked","setLoadChecked","loadCount","setLoadCount","setDisplay","sensorArray","showMore","numberNotificationsToShow","numberOfUnchecked","numberOfChecked","displayShowMore","uncheckedNotificationListContent","slice","checkedNotificationListContent","pb","en","common","dashboard","pl","use","initReactI18next","init","lng","getItem","fallbackLng","ns","namespaces","defaultNS","resources","translations","react","useSuspense","interpolation","escapeValue","createMuiTheme","contrastThreshold","levelHalf","level1","App","ThemeProvider","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.afc0cd27.chunk.js","sourcesContent":["const initialState = {\r\n  data: {}\r\n}\r\nexport default function home (state = initialState, action) {\r\n  switch (action.type) {\r\n    // case ACTION_TYPE_ENUM:\r\n    //     return {\r\n    //         ...state,\r\n    //         ...action,\r\n    //     };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export default {\r\n  HOME_LOADED_ACTION: 'HOME_LOADED_ACTION',\r\n\r\n  SENSORS_LOAD_ACTION: 'SENSORS_LOAD_ACTION',\r\n  SENSORS_FETCH_START: 'SENSORS_FETCH_START',\r\n  SENSORS_FETCH_SUCCESS: 'SENSORS_FETCH_SUCCESS',\r\n  SENSORS_FETCH_FAIL: 'SENSORS_FETCH_FAIL',\r\n\r\n  SENSORS_UPDATE_ACTION: 'SENSORS_UPDATE_ACTION',\r\n  SENSORS_UPDATE_START: 'SENSORS_UPDATE_START',\r\n  SENSORS_UPDATE_SUCCESS: 'SENSORS_UPDATE_SUCCESS',\r\n  SENSORS_UPDATE_FAIL: 'SENSORS_UPDATE_FAIL',\r\n\r\n  ADD_SENSOR_REQUEST: 'ADD_SENSOR_REQUEST',\r\n\r\n  LIST_CLICKED: 'LIST_CLICKED',\r\n  MAP_CLICKED: 'MAP_CLICKED',\r\n  POINT_CLICKED: 'POINT_CLICKED',\r\n\r\n  DB_ADD_POINT: 'DB_ADD_POINT',\r\n  DB_ADD_POINT_START: 'DB_ADD_POINT_START',\r\n  DB_ADD_POINT_SUCCESS: 'DB_ADD_POINT_SUCCESS',\r\n  DB_ADD_POINT_FAIL: 'DB_ADD_POINT_FAIL',\r\n\r\n  DB_UPDATE_ADD_ERROR_POINTS: 'DB_UPDATE_ADD_ERROR_POINTS',\r\n  DB_UPDATE_REMOVE_ERROR_POINTS: 'DB_UPDATE_REMOVE_ERROR_POINTS',\r\n\r\n  DB_REMOVE_POINT: 'DB_REMOVE_POINT',\r\n  DB_REMOVE_POINT_START: 'DB_REMOVE_POINT_START',\r\n  DB_REMOVE_POINT_SUCCESS: 'DB_REMOVE_POINT_SUCCESS',\r\n  DB_REMOVE_POINT_FAIL: 'DB_REMOVE_POINT_FAIL',\r\n\r\n  SENSORS_REFRESH_ACTION: 'SENSORS_REFRESH_ACTION',\r\n  SENSORS_REFRESH_START: 'SENSORS_REFRESH_START',\r\n  SENSORS_REFRESH_SUCCESS: 'SENSORS_REFRESH_SUCCESS',\r\n  SENSORS_REFRESH_FAIL: 'SENSORS_REFRESH_FAIL',\r\n\r\n  NOTIFICATIONS_FETCH_REQUEST: 'NOTIFICATIONS_FETCH_REQUEST',\r\n  NOTIFICATIONS_FETCH_SUCCESS: 'NOTIFICATIONS_FETCH_SUCCESS',\r\n  NOTIFICATIONS_FETCH_FAIL: 'NOTIFICATIONS_FETCH_FAIL',\r\n\r\n  NOTIFICATIONS_CHECK: 'NOTIFICATIONS_CHECK',\r\n  NOTIFICATIONS_CHECK_START: 'NOTIFICATIONS_CHECK_START',\r\n  NOTIFICATIONS_CHECK_SUCCESS: 'NOTIFICATIONS_CHECK_SUCCESS',\r\n  NOTIFICATIONS_CHECK_FAIL: 'NOTIFICATIONS_CHECK_FAIL',\r\n\r\n  NOTIFICATIONS_UPDATE: 'NOTIFICATIONS_UPDATE',\r\n  NOTIFICATIONS_UPDATE_SUCCESS: 'NOTIFICATIONS_UPDATE_SUCCESS',\r\n  NOTIFICATIONS_UPDATE_FAIL: 'NOTIFICATIONS_UPDATE_FAIL',\r\n\r\n  NOTIFICATION_DRAWER_OPEN: 'NOTIFICATION_DRAWER_OPEN',\r\n  NOTIFICATION_DRAWER_CLOSE: 'NOTIFICATION_DRAWER_CLOSE',\r\n\r\n  SENSOR_LIGHT_CHANGE_ACTION: 'SENSOR_LIGHT_CHANGE_ACTION',\r\n  SENSOR_LIGHT_CHANGE_START: 'SENSOR_LIGHT_CHANGE_START',\r\n  SENSOR_LIGHT_CHANGE_SUCCESS: 'SENSOR_LIGHT_CHANGE_SUCCESS',\r\n  SENSOR_LIGHT_CHANGE_FAIL: 'SENSOR_LIGHT_CHANGE_FAIL',\r\n\r\n  SENSOR_WINDOW_BLINDS_CHANGE_ACTION: 'SENSOR_WINDOW_BLINDS_CHANGE_ACTION',\r\n  SENSOR_WINDOW_BLINDS_CHANGE_START: 'SENSOR_WINDOW_BLINDS_CHANGE_START',\r\n  SENSOR_WINDOW_BLINDS_CHANGE_SUCCESS: 'SENSOR_WINDOWS_BLINDS_CHANGE_SUCCESS',\r\n  SENSOR_WINDOW_BLINDS_CHANGE_FAIL: 'SENSOR_WINDOW_BLINDS_CHANGE_FAIL',\r\n\r\n  SENSOR_STOVE_CHANGE_ACTION: 'SENSOR_STOVE_CHANGE_ACTION',\r\n  SENSOR_STOVE_CHANGE_START: 'SENSOR_STOVE_CHANGE_START',\r\n  SENSOR_STOVE_CHANGE_SUCCESS: 'SENSOR_STOVE_CHANGE_SUCCESS',\r\n  SENSOR_STOVE_CHANGE_FAIL: 'SENSOR_STOVE_CHANGE_FAIL',\r\n}\r\n","import actionTypes from '../../common/constants/actionTypes'\r\n\r\nconst initialState = {\r\n  sensors: [],\r\n  loadingSensors: true,\r\n  loadingError: null,\r\n  sensorError: null,\r\n  refreshError: null,\r\n  lightDetailsError: null,\r\n  windowBlindsDetailsError: null,\r\n  stoveDetailsError: null,\r\n  updateError: null,\r\n  updating: 0\r\n}\r\n\r\nconst fetchSensorsStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loadingError: null,\r\n    loadingSensors: true\r\n  }\r\n}\r\n\r\nconst fetchSensorsSuccess = (state, action) => {\r\n  const sensors = {\r\n    temperatureSensors: action.sensors.temperatureSensors,\r\n    windowSensors: action.sensors.windowSensors,\r\n    windowBlinds: action.sensors.windowBlinds,\r\n    stoveSensors: action.sensors.stoveSensors,\r\n    smokeSensors: action.sensors.smokeSensors,\r\n    lights: action.sensors.lights\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    sensors,\r\n    loadingSensors: false,\r\n    refreshError: null\r\n  }\r\n}\r\n\r\nconst updateSensorsStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    updateError: null\r\n  }\r\n}\r\nconst updateSensorsSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    sensors: action.sensors,\r\n    updating: state.updating + 1,\r\n    updateError: false\r\n  }\r\n}\r\nconst updateSensorsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    updateError: true\r\n  }\r\n}\r\n\r\nconst fetchSensorsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loadingError: action.error,\r\n    loadingSensors: false\r\n  }\r\n}\r\n\r\nconst refreshSensorsStart = (state, action) => {\r\n  return { ...state }\r\n}\r\n\r\nconst refreshSensorsSuccess = (state, action) => {\r\n  const sensors = {\r\n    temperatureSensors: action.sensors.temperatureSensors,\r\n    windowSensors: action.sensors.windowSensors,\r\n    windowBlinds: action.sensors.windowBlinds,\r\n    stoveSensors: action.sensors.stoveSensors,\r\n    smokeSensors: action.sensors.smokeSensors,\r\n    lights: action.sensors.lights\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    sensors,\r\n    refreshError: null,\r\n    updating: 0\r\n  }\r\n}\r\n\r\nconst refreshSensorsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    refreshError: action.error,\r\n    updating: 0\r\n  }\r\n}\r\n\r\nconst changeLightSensorDetailsStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    lightDetailsError: null\r\n  }\r\n}\r\n\r\nconst changeLightSensorDetailsSuccess = (state, action) => {\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nconst changeLightSensorDetailsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    lightDetailsError: action.error\r\n  }\r\n}\r\n\r\nconst changeWindowBlindsSensorDetailsStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    windowBlindsDetailsError: null\r\n  }\r\n}\r\n\r\nconst changeWindowBlindsSensorDetailsSuccess = (state, action) => {\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nconst changeWindowBlindsSensorDetailsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    windowBlindsDetailsError: action.error\r\n  }\r\n}\r\n\r\nconst changeStoveSensorDetailsStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    stoveDetailsError: null\r\n  }\r\n}\r\n\r\nconst changeStoveSensorDetailsSuccess = (state, action) => {\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nconst changeStoveSensorDetailsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    stoveDetailsError: action.error\r\n  }\r\n}\r\n\r\nexport default function sensor (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.SENSORS_FETCH_START:\r\n      return fetchSensorsStart(state, action)\r\n    case actionTypes.SENSORS_FETCH_SUCCESS:\r\n      return fetchSensorsSuccess(state, action)\r\n    case actionTypes.SENSORS_FETCH_FAIL:\r\n      return fetchSensorsFail(state, action)\r\n\r\n    case actionTypes.SENSORS_UPDATE_START:\r\n      return updateSensorsStart(state, action)\r\n    case actionTypes.SENSORS_UPDATE_SUCCESS:\r\n      return updateSensorsSuccess(state, action)\r\n    case actionTypes.SENSORS_UPDATE_FAIL:\r\n      return updateSensorsFail(state, action)\r\n\r\n    case actionTypes.SENSORS_REFRESH_START:\r\n      return refreshSensorsStart(state, action)\r\n    case actionTypes.SENSORS_REFRESH_SUCCESS:\r\n      return refreshSensorsSuccess(state, action)\r\n    case actionTypes.SENSORS_REFRESH_FAIL:\r\n      return refreshSensorsFail(state, action)\r\n\r\n    case actionTypes.SENSOR_LIGHT_CHANGE_START:\r\n      return changeLightSensorDetailsStart(state, action)\r\n    case actionTypes.SENSOR_LIGHT_CHANGE_SUCCESS:\r\n      return changeLightSensorDetailsSuccess(state, action)\r\n    case actionTypes.SENSOR_LIGHT_CHANGE_FAIL:\r\n      return changeLightSensorDetailsFail(state, action)\r\n\r\n    case actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_START:\r\n      return changeWindowBlindsSensorDetailsStart(state, action)\r\n    case actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_SUCCESS:\r\n      return changeWindowBlindsSensorDetailsSuccess(state, action)\r\n    case actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_FAIL:\r\n      return changeWindowBlindsSensorDetailsFail(state, action)\r\n    \r\n    case actionTypes.SENSOR_STOVE_CHANGE_START:\r\n      return changeStoveSensorDetailsStart(state, action)\r\n    case actionTypes.SENSOR_STOVE_CHANGE_SUCCESS:\r\n      return changeStoveSensorDetailsSuccess(state, action)\r\n    case actionTypes.SENSOR_STOVE_CHANGE_FAIL:\r\n      return changeStoveSensorDetailsFail(state, action)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import actionTypes from '../../common/constants/actionTypes'\r\n\r\nconst initialState = {\r\n  listItemPressed: false,\r\n  mapPointPressed: false,\r\n  pressedItemId: undefined,\r\n  waitingForSensorLocation: false,\r\n  sensorColor: undefined,\r\n  sensorBorderColor: undefined,\r\n  sensorData: undefined\r\n}\r\n\r\nconst listClicked = (state, action) => {\r\n  return {\r\n    ...state,\r\n    listItemPressed: true,\r\n    mapPointPressed: false,\r\n    waitingForSensorLocation: !action.isOnMap,\r\n    pressedItemId: action.id,\r\n    sensorColor: action.sensorColor,\r\n    sensorBorderColor: undefined,\r\n    sensorData: action.sensorData\r\n  }\r\n}\r\n\r\nconst mapClicked = (state, action) => {\r\n  return {\r\n    ...state,\r\n    listItemPressed: false,\r\n    mapPointPressed: false,\r\n    waitingForSensorLocation: false,\r\n    pressedItemId: undefined,\r\n    sensorColor: undefined,\r\n    sensorBorderColor: undefined,\r\n    sensorData: action.sensorData\r\n  }\r\n}\r\n\r\nconst pointClicked = (state, action) => {\r\n  return {\r\n    ...state,\r\n    listItemPressed: false,\r\n    mapPointPressed: true,\r\n    waitingForSensorLocation: false,\r\n    pressedItemId: action.id,\r\n    sensorBorderColor: action.sensorBorderColor\r\n  }\r\n}\r\n\r\nexport default function mapListCommunication (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case actionTypes.LIST_CLICKED:\r\n      return listClicked(state, action)\r\n    case actionTypes.MAP_CLICKED:\r\n      return mapClicked(state, action)\r\n    case actionTypes.POINT_CLICKED:\r\n      return pointClicked(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import actionTypes from '../../common/constants/actionTypes'\r\n\r\nconst initialState = {\r\n  _id: 0,\r\n  type: 'None',\r\n  mapPosition: undefined,\r\n  addingPoint: false,\r\n  addError: undefined,\r\n  removeError: undefined,\r\n  removeSuccess: false,\r\n  addErrorPoints: [],\r\n  removeErrorPoints: []\r\n}\r\n\r\nconst addPointStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    _id: action._id,\r\n    type: action.sensorType,\r\n    mapPosition: action.mapPosition,\r\n    addingPoint: true,\r\n    addError: undefined,\r\n    addErrorPoints: Array.from(new Set([...state.addErrorPoints, action._id]))\r\n  }\r\n}\r\n\r\nconst addPointSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    _id: action._id,\r\n    type: action.sensorType,\r\n    mapPosition: action.mapPosition,\r\n    addingPoint: false,\r\n    addError: undefined,\r\n    addErrorPoints: [...state.addErrorPoints.filter(p => p !== action._id)]\r\n  }\r\n}\r\n\r\nconst addPointFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    _id: action._id,\r\n    type: 'None',\r\n    mapPosition: undefined,\r\n    addingPoint: false,\r\n    addError: action.error,\r\n    addErrorPoints: [...state.addErrorPoints]\r\n  }\r\n}\r\n\r\nconst updateAddErrorPoints = (state, action) => {\r\n  return {\r\n    ...state,\r\n    addErrorPoints: [...state.addErrorPoints.filter(p => p !== action._id)]\r\n  }\r\n}\r\n\r\nconst removePointStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    _id: action._id,\r\n    type: undefined,\r\n    mapPosition: undefined,\r\n    addingPoint: false,\r\n    removeError: undefined,\r\n    removeSuccess: false,\r\n    removeErrorPoints: Array.from(new Set([...state.removeErrorPoints, action._id]))\r\n  }\r\n}\r\n\r\nconst removePointSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    _id: action._id,\r\n    type: undefined,\r\n    mapPosition: undefined,\r\n    addingPoint: false,\r\n    removeError: undefined,\r\n    removeSuccess: true,\r\n    removeErrorPoints: state.removeErrorPoints\r\n  }\r\n}\r\n\r\nconst removePointFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    _id: action._id,\r\n    type: 'None',\r\n    mapPosition: undefined,\r\n    addingPoint: false,\r\n    removeError: action.error,\r\n    removeSuccess: false,\r\n    removeErrorPoints: state.removeErrorPoints\r\n  }\r\n}\r\n\r\nconst updateRemoveErrorPoints = (state, action) => {\r\n  return {\r\n    ...state,\r\n    removeErrorPoints: [...state.removeErrorPoints.filter(p => p !== action._id)]\r\n  }\r\n}\r\n\r\nexport default function dbInteraction (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.DB_ADD_POINT_START:\r\n      return addPointStart(state, action)\r\n    case actionTypes.DB_ADD_POINT_SUCCESS:\r\n      return addPointSuccess(state, action)\r\n    case actionTypes.DB_ADD_POINT_FAIL:\r\n      return addPointFail(state, action)\r\n    case actionTypes.DB_UPDATE_ADD_ERROR_POINTS:\r\n      return updateAddErrorPoints(state, action)\r\n    case actionTypes.DB_REMOVE_POINT_START:\r\n      return removePointStart(state, action)\r\n    case actionTypes.DB_REMOVE_POINT_SUCCESS:\r\n      return removePointSuccess(state, action)\r\n    case actionTypes.DB_REMOVE_POINT_FAIL:\r\n      return removePointFail(state, action)\r\n    case actionTypes.DB_UPDATE_REMOVE_ERROR_POINTS:\r\n      return updateRemoveErrorPoints(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import actionTypes from '../../common/constants/actionTypes'\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n  fetchError: undefined,\r\n  fetching: false,\r\n  isDrawerOpen: false,\r\n  updating: false,\r\n  updateError: undefined,\r\n  checking: false,\r\n  notificationContent: undefined,\r\n  checkError: undefined\r\n}\r\n\r\nexport default function notification (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case actionTypes.NOTIFICATIONS_FETCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        fetching: true,\r\n        fetchError: undefined\r\n      }\r\n    case actionTypes.NOTIFICATIONS_FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        notifications: action.notifications\r\n      }\r\n    case actionTypes.NOTIFICATIONS_FETCH_FAIL:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        fetchError: action.error\r\n      }\r\n    case actionTypes.NOTIFICATION_DRAWER_OPEN:\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: true\r\n      }\r\n    case actionTypes.NOTIFICATION_DRAWER_CLOSE:\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: false\r\n      }\r\n    case actionTypes.NOTIFICATIONS_CHECK:\r\n      return {\r\n        ...state,\r\n        notificationContent: undefined,\r\n        checkError: undefined,\r\n        checking: false\r\n      }\r\n    case actionTypes.NOTIFICATIONS_CHECK_START:\r\n      return {\r\n        ...state,\r\n        notificationContent: action.notification,\r\n        checking: true\r\n      }\r\n    case actionTypes.NOTIFICATIONS_CHECK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        notifications: action.notifications,\r\n        checking: false,\r\n        checkError: undefined\r\n      }\r\n    case actionTypes.NOTIFICATIONS_CHECK_FAIL:\r\n      return {\r\n        ...state,\r\n        notifications: action.notifications,\r\n        checking: false,\r\n        checkError: action.error\r\n      }\r\n    case actionTypes.NOTIFICATIONS_UPDATE:\r\n      return {\r\n        ...state,\r\n        updating: true,\r\n        updateError: undefined\r\n      }\r\n    case actionTypes.NOTIFICATIONS_UPDATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        notifications: action.notifications\r\n      }\r\n    case actionTypes.NOTIFICATIONS_UPDATE_FAIL:\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateError: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\n// This is the place for future reducers to combine them all\r\nimport home from '../../data/reducers/homeReducer.js'\r\nimport sensor from '../../data/reducers/sensor.js'\r\nimport mapListCommunication from '../../data/reducers/mapListCommunication.js'\r\nimport dbInteraction from '../../data/reducers/dbInteraction.js'\r\nimport notification from '../../data/reducers/notification.js'\r\n\r\nexport default combineReducers({\r\n  home,\r\n  sensor,\r\n  mapListCommunication,\r\n  dbInteraction,\r\n  notification\r\n})\r\n","import { takeLatest } from 'redux-saga/effects'\r\n\r\nexport function * homeLoadedSaga () {\r\n  console.log('Home loaded!')\r\n}\r\n\r\nexport function * watchHome () {\r\n  yield takeLatest('HOME_LOADED_ACTION', homeLoadedSaga)\r\n}\r\n","import actionTypes from '../../../common/constants/actionTypes'\r\n\r\nexport function loadSensors () {\r\n  return {\r\n    type: actionTypes.SENSORS_LOAD_ACTION\r\n  }\r\n}\r\n\r\nexport function updateSensors (sensors) {\r\n  return {\r\n    type: actionTypes.SENSORS_UPDATE_ACTION,\r\n    sensors\r\n  }\r\n}\r\n\r\nexport function updateSensorsStart () {\r\n  return {\r\n    type: actionTypes.SENSORS_UPDATE_START\r\n  }\r\n}\r\n\r\nexport function updateSensorsSuccess (sensors) {\r\n  return {\r\n    type: actionTypes.SENSORS_UPDATE_SUCCESS,\r\n    sensors\r\n  }\r\n}\r\n\r\nexport function updateSensorsFail (error) {\r\n  return {\r\n    type: actionTypes.SENSORS_UPDATE_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport function fetchSensorsStart () {\r\n  return {\r\n    type: actionTypes.SENSORS_FETCH_START\r\n  }\r\n}\r\n\r\nexport function fetchSensorsSuccess (sensors) {\r\n  return {\r\n    type: actionTypes.SENSORS_FETCH_SUCCESS,\r\n    sensors\r\n  }\r\n}\r\n\r\nexport function fetchSensorsFail (error) {\r\n  return {\r\n    type: actionTypes.SENSORS_FETCH_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport function addSensorRequest (sensor) {\r\n  return {\r\n    type: actionTypes.ADD_SENSOR_REQUEST,\r\n    sensor\r\n  }\r\n}\r\n\r\nexport function refreshSensors () {\r\n  return {\r\n    type: actionTypes.SENSORS_REFRESH_ACTION\r\n  }\r\n}\r\n\r\nexport function refreshSensorsStart () {\r\n  return {\r\n    type: actionTypes.SENSORS_REFRESH_START\r\n  }\r\n}\r\n\r\nexport function refreshSensorsSuccess (sensors) {\r\n  return {\r\n    type: actionTypes.SENSORS_REFRESH_SUCCESS,\r\n    sensors\r\n  }\r\n}\r\n\r\nexport function refreshSensorsFail (error) {\r\n  return {\r\n    type: actionTypes.SENSORS_REFRESH_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport function changeLightSensorDetails (lightSensorDetails) {\r\n  return {\r\n    type: actionTypes.SENSOR_LIGHT_CHANGE_ACTION,\r\n    lightSensorDetails\r\n  }\r\n}\r\n\r\nexport function changeLightSensorDetailsStart () {\r\n  return {\r\n    type: actionTypes.SENSOR_LIGHT_CHANGE_START\r\n  }\r\n}\r\n\r\nexport function changeLightSensorDetailsSuccess () {\r\n  return {\r\n    type: actionTypes.SENSOR_LIGHT_CHANGE_SUCCESS\r\n  }\r\n}\r\n\r\nexport function changeLightSensorDetailsFail (error) {\r\n  return {\r\n    type: actionTypes.SENSOR_LIGHT_CHANGE_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport function changeWindowBlindsSensorDetails (windowBlindsSensorDetails) {\r\n  return {\r\n    type: actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_ACTION,\r\n    windowBlindsSensorDetails\r\n  }\r\n}\r\n\r\nexport function changeWindowBlindsSensorDetailsStart () {\r\n  return {\r\n    type: actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_START\r\n  }\r\n}\r\n\r\nexport function changeWindowBlindsSensorDetailsSuccess () {\r\n  return {\r\n    type: actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_SUCCESS\r\n  }\r\n}\r\n\r\nexport function changeWindowBlindsSensorDetailsFail (error) {\r\n  return {\r\n    type: actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport function changeStoveSensorDetails (stoveSensorDetails) {\r\n  return {\r\n    type: actionTypes.SENSOR_STOVE_CHANGE_ACTION,\r\n    stoveSensorDetails\r\n  }\r\n}\r\n\r\nexport function changeStoveSensorDetailsStart () {\r\n  return {\r\n    type: actionTypes.SENSOR_STOVE_CHANGE_START\r\n  }\r\n}\r\n\r\nexport function changeStoveSensorDetailsSuccess () {\r\n  return {\r\n    type: actionTypes.SENSOR_STOVE_CHANGE_SUCCESS\r\n  }\r\n}\r\n\r\nexport function changeStoveSensorDetailsFail (error) {\r\n  return {\r\n    type: actionTypes.SENSOR_STOVE_CHANGE_FAIL,\r\n    error\r\n  }\r\n}\r\n","const mockSensors = {\r\n  temperatureSensors: [\r\n    {\r\n      id: 1,\r\n      type: 'TEMPERATURE_SENSOR',\r\n      value: 21\r\n    },\r\n    {\r\n      id: 9,\r\n      type: 'TEMPERATURE_SENSOR',\r\n      value: 22,\r\n      mapPosition: {\r\n        x: 40,\r\n        y: 60\r\n      }\r\n    },\r\n    {\r\n      id: 10,\r\n      type: 'TEMPERATURE_SENSOR',\r\n      value: 22,\r\n      mapPosition: {\r\n        x: 77,\r\n        y: 56\r\n      }\r\n    },\r\n    {\r\n      id: 11,\r\n      type: 'TEMPERATURE_SENSOR',\r\n      value: 24,\r\n      mapPosition: {\r\n        x: 40,\r\n        y: 23\r\n      }\r\n    },\r\n    {\r\n      id: 12,\r\n      type: 'TEMPERATURE_SENSOR',\r\n      value: 19.3,\r\n      mapPosition: {\r\n        x: 0,\r\n        y: 0\r\n      }\r\n    },\r\n    {\r\n      id: 13,\r\n      type: 'TEMPERATURE_SENSOR',\r\n      value: 21,\r\n      mapPosition: undefined\r\n    }\r\n  ],\r\n  windowSensors: [\r\n    {\r\n      id: 2,\r\n      type: 'windowSensor',\r\n      status: 'open'\r\n    }\r\n  ],\r\n  windowBlinds: [\r\n    {\r\n      id: 3,\r\n      type: 'windowBlind',\r\n      position: 90\r\n    }\r\n  ],\r\n  stoveSensors: [\r\n    {\r\n      id: 4,\r\n      type: 'stoveSensor',\r\n      timer: { \r\n        hour: 0, \r\n        min: 1  \r\n      }, \r\n      temperature: 150, \r\n      watt: 1300, \r\n      uptime: 0, \r\n      power: true, \r\n      level: 4, \r\n      mode: \"Hot Pot\", \r\n      overheat: true\r\n    },\r\n  ],\r\n  smokeSensors: [\r\n    {\r\n      id: 5,\r\n      type: 'smokeSensor',\r\n      isSmokeDetected: true\r\n    },\r\n    {\r\n      id: 12,\r\n      type: 'smokeSensor',\r\n      isSmokeDetected: true,\r\n      mapPosition: {\r\n        x: 88,\r\n        y: 43\r\n      }\r\n    }\r\n  ],\r\n  lights: [\r\n    {\r\n      id: 6,\r\n      type: 'LED_CONTROLLER',\r\n      hue: 17,\r\n      saturation: 40,\r\n      value: 32\r\n    }\r\n  ]\r\n}\r\n\r\nexport default mockSensors\r\n","import axios from 'axios'\r\nimport mockSensors from './mockSensors'\r\n\r\nexport function * getSensors () {\r\n  const config = { headers: { 'Content-Type': 'application/json', 'Authorization': 'secret' } }\r\n  const res = yield axios.post(`https://it4735-group6-server.herokuapp.com/api/v1/admin/device`, {\r\n    type: \"read\",\r\n  }, config)\r\n  var ret = {\r\n    temperatureSensors: [],\r\n    windowSensors: [],\r\n    windowBlinds: [],\r\n    stoveSensors: [],\r\n    smokeSensors: [],\r\n    lights: []\r\n  }\r\n  const devices = res.data.devices\r\n  for (var i = 0; i < devices.length; ++i) {\r\n    var obj = devices[i]\r\n    if (obj.type == 0 || obj.sensorType == \"stoveSensor\") {\r\n      ret.stoveSensors.push({\r\n        ...obj,\r\n        type: \"stoveSensor\",\r\n        timer: !!obj.timer ? obj.timer : { \r\n          hour: 0, \r\n          min: 0  \r\n        }, \r\n        temperature: !!obj.temperature ? obj.temperature : 0, \r\n        watt: !!obj.watt ? obj.watt : 0, \r\n        uptime: !!obj.uptime ? obj.uptime : 0, \r\n        power: !!obj.power ? obj.power : false, \r\n        level: !!obj.level ? obj.level : 0, \r\n        mode: !!obj.mode ? obj.mode : \"None\", \r\n        overheat: !!obj.overheat ? obj.overheat : false\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n  //return mockSensors\r\n}\r\n\r\nexport function * refreshSensors () {\r\n  const config = { headers: { 'Content-Type': 'application/json', 'Authorization': 'secret' } }\r\n  const res = yield axios.post(`https://it4735-group6-server.herokuapp.com/api/v1/admin/device`, {\r\n    type: \"read\",\r\n  }, config)\r\n  var ret = {\r\n    temperatureSensors: [],\r\n    windowSensors: [],\r\n    windowBlinds: [],\r\n    stoveSensors: [],\r\n    smokeSensors: [],\r\n    lights: []\r\n  }\r\n  const devices = res.data.devices\r\n  for (var i = 0; i < devices.length; ++i) {\r\n    var obj = devices[i]\r\n    if (obj.type == 0 || obj.sensorType == \"stoveSensor\") {\r\n      ret.stoveSensors.push({\r\n        ...obj,\r\n        type: \"stoveSensor\",\r\n        timer: !!obj.timer ? obj.timer : { \r\n          hour: 0, \r\n          min: 0  \r\n        }, \r\n        temperature: !!obj.temperature ? obj.temperature : 0, \r\n        watt: !!obj.watt ? obj.watt : 0, \r\n        uptime: !!obj.uptime ? obj.uptime : 0, \r\n        power: !!obj.power ? obj.power : false, \r\n        level: !!obj.level ? obj.level : 0, \r\n        mode: !!obj.mode ? obj.mode : \"None\", \r\n        overheat: !!obj.overheat ? obj.overheat : false\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n  //return mockSensors\r\n}\r\n\r\nexport function * changeLightDetails (lightSensorDetails) {\r\n  const config = { headers: { 'Content-Type': 'application/json' } }\r\n  //const res = yield axios.put('/api/v1/light', lightSensorDetails, config)\r\n\r\n  //return res.data\r\n  return mockSensors\r\n}\r\n\r\nexport function * changeWindowBlindsDetails (windowBlindsSensorDetails) {\r\n  const config = { headers: { 'Content-Type': 'application/json' } }\r\n  //const res = yield axios.put('/api/v1/blinds', windowBlindsSensorDetails, config)\r\n\r\n  //return res.data\r\n  return mockSensors\r\n}\r\n\r\nexport function * changeStoveDetails (stoveSensorDetails) {\r\n  //alert(JSON.stringify(stoveSensorDetails))\r\n  const config = { headers: { 'Content-Type': 'application/json', 'Authorization': 'secret' } }\r\n  const res = yield axios.post(`https://it4735-group6-server.herokuapp.com/api/v1/admin/device`, {\r\n    type: \"write\",\r\n    devices: [stoveSensorDetails]\r\n  }, config)\r\n  return res\r\n  //return mockSensors\r\n}\r\n","import * as actions from '../../actions/sensor'\r\nimport { put, call, delay, select } from 'redux-saga/effects'\r\nimport {\r\n  getSensors,\r\n  refreshSensors,\r\n  changeLightDetails,\r\n  changeWindowBlindsDetails,\r\n  changeStoveDetails,\r\n} from '../../api/sensor'\r\n\r\nconst formatValue = value => (value / 10).toFixed(1)\r\n\r\nconst changeSensorTemperatureValueFormat = sensors => sensors.map(sensor => ({\r\n  ...sensor,\r\n  value: formatValue(sensor.value)\r\n}))\r\n\r\nexport function * loadSensorsSaga () {\r\n  yield put(actions.fetchSensorsStart())\r\n  try {\r\n    const sensors = yield call(getSensors)\r\n    //sensors.temperatureSensors = changeSensorTemperatureValueFormat(sensors.temperatureSensors)\r\n    yield put(actions.fetchSensorsSuccess(sensors))\r\n  } catch (error) {\r\n    yield put(actions.fetchSensorsFail(error))\r\n  }\r\n}\r\n\r\nexport function * updateSensorsSaga (action) {\r\n  yield put(actions.updateSensorsStart())\r\n  try {\r\n    yield put(actions.updateSensorsSuccess(action.sensors))\r\n  } catch (error) {\r\n    yield put(actions.updateSensorsFail(error))\r\n  }\r\n}\r\n\r\nexport function * refreshSensorsSaga () {\r\n  yield put(actions.refreshSensorsStart())\r\n  while (true) {\r\n    yield delay(3000)\r\n    try {\r\n      const sensors = yield call(refreshSensors)\r\n      //sensors.temperatureSensors = changeSensorTemperatureValueFormat(sensors.temperatureSensors)\r\n      const { updating } = (yield select()).sensor\r\n      updating === 0 && (yield put(actions.refreshSensorsSuccess(sensors)))\r\n    } catch (error) {\r\n      yield put(actions.refreshSensorsFail(error))\r\n    }\r\n  }\r\n}\r\n\r\nexport function * changeLightSensorDetailsSaga (action) {\r\n  yield put(actions.changeLightSensorDetailsStart())\r\n  try {\r\n    yield call(changeLightDetails, action.lightSensorDetails)\r\n    yield put(actions.changeLightSensorDetailsSuccess())\r\n  } catch (error) {\r\n    yield put(actions.changeLightSensorDetailsFail(error))\r\n  }\r\n}\r\n\r\nexport function * changeWindowBlindsSensorDetailsSaga (action) {\r\n  yield put(actions.changeWindowBlindsSensorDetailsStart())\r\n  try {\r\n    yield call(changeWindowBlindsDetails, action.windowBlindsSensorDetails)\r\n    yield put(actions.changeWindowBlindsSensorDetailsSuccess())\r\n  } catch (error) {\r\n    yield put(actions.changeWindowBlindsSensorDetailsFail(error))\r\n  }\r\n}\r\n\r\nexport function * changeStoveSensorDetailsSaga (action) {\r\n  yield put(actions.changeStoveSensorDetailsStart())\r\n  try {\r\n    yield call(changeStoveDetails, action.stoveSensorDetails)\r\n    yield put(actions.changeStoveSensorDetailsSuccess())\r\n  } catch (error) {\r\n    yield put(actions.changeStoveSensorDetailsFail(error))\r\n  }\r\n}","import { takeLatest } from 'redux-saga/effects'\r\nimport {\r\n  loadSensorsSaga,\r\n  refreshSensorsSaga,\r\n  changeLightSensorDetailsSaga,\r\n  changeWindowBlindsSensorDetailsSaga,\r\n  changeStoveSensorDetailsSaga,\r\n  updateSensorsSaga\r\n} from './sensorSagas'\r\nimport actionTypes from '../../../common/constants/actionTypes'\r\n\r\nexport function * watchSensors () {\r\n  yield takeLatest(actionTypes.SENSORS_LOAD_ACTION, loadSensorsSaga)\r\n  yield takeLatest(actionTypes.SENSORS_REFRESH_ACTION, refreshSensorsSaga)\r\n  yield takeLatest(actionTypes.SENSOR_LIGHT_CHANGE_ACTION, changeLightSensorDetailsSaga)\r\n  yield takeLatest(actionTypes.SENSOR_WINDOW_BLINDS_CHANGE_ACTION, changeWindowBlindsSensorDetailsSaga)\r\n  yield takeLatest(actionTypes.SENSOR_STOVE_CHANGE_ACTION, changeStoveSensorDetailsSaga)\r\n  yield takeLatest(actionTypes.SENSORS_UPDATE_ACTION, updateSensorsSaga)\r\n}\r\n","import actionTypes from '../../common/constants/actionTypes'\r\n\r\nexport function dbAddPoint (sensor) {\r\n  return {\r\n    type: actionTypes.DB_ADD_POINT,\r\n    _id: sensor._id,\r\n    sensorType: sensor.type,\r\n    mapPosition: sensor.mapPosition\r\n  }\r\n}\r\n\r\nexport function dbAddPointStart (sensor) {\r\n  return {\r\n    type: actionTypes.DB_ADD_POINT_START,\r\n    _id: sensor._id,\r\n    sensorType: sensor.sensorType,\r\n    mapPosition: sensor.mapPosition\r\n  }\r\n}\r\n\r\nexport function dbAddPointSuccess (sensor) {\r\n  return {\r\n    type: actionTypes.DB_ADD_POINT_SUCCESS,\r\n    _id: sensor._id,\r\n    sensorType: sensor.sensorType,\r\n    mapPosition: sensor.mapPosition\r\n  }\r\n}\r\n\r\nexport function dbAddPointFail (sensor, error) {\r\n  return {\r\n    type: actionTypes.DB_ADD_POINT_FAIL,\r\n    _id: sensor._id,\r\n    error\r\n  }\r\n}\r\n\r\nexport function dbUpdateAddErrorPoints (id) {\r\n  return {\r\n    type: actionTypes.DB_UPDATE_ADD_ERROR_POINTS,\r\n    _id: id\r\n  }\r\n}\r\n\r\nexport function dbRemovePoint (sensor) {\r\n  return {\r\n    type: actionTypes.DB_REMOVE_POINT,\r\n    _id: sensor._id\r\n  }\r\n}\r\n\r\nexport function dbRemovePointStart (sensor) {\r\n  return {\r\n    type: actionTypes.DB_REMOVE_POINT_START,\r\n    _id: sensor._id\r\n  }\r\n}\r\n\r\nexport function dbRemovePointSuccess (sensor) {\r\n  return {\r\n    type: actionTypes.DB_REMOVE_POINT_SUCCESS,\r\n    _id: sensor._id\r\n  }\r\n}\r\n\r\nexport function dbRemovePointFail (sensor, error) {\r\n  return {\r\n    type: actionTypes.DB_REMOVE_POINT_FAIL,\r\n    _id: sensor._id,\r\n    error\r\n  }\r\n}\r\n\r\nexport function dbUpdateRemoveErrorPoints (id) {\r\n  return {\r\n    type: actionTypes.DB_UPDATE_REMOVE_ERROR_POINTS,\r\n    _id: id\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport function * addMapPoint (sensor) {\r\n  const config = { headers: { 'Content-Type': 'application/json', 'Authorization': 'secret' } }\r\n  const res = yield axios.post(`https://it4735-group6-server.herokuapp.com/api/v1/admin/device`, {\r\n    type: \"write\",\r\n    devices: [\r\n      {\r\n        id: sensor._id,\r\n        sensorType: sensor.sensorType,\r\n        mapPosition: sensor.mapPosition\r\n      }\r\n    ]\r\n  }, config)\r\n  return res\r\n}\r\n\r\nexport function * removeMapPoint (sensor) {\r\n  const config = { headers: { 'Content-Type': 'application/json', 'Authorization': 'secret' } }\r\n  const res = yield axios.post(`https://it4735-group6-server.herokuapp.com/api/v1/admin/device`, {\r\n    type: \"write\",\r\n    devices: [\r\n      {\r\n        id: sensor._id,\r\n        sensorType: sensor.sensorType,\r\n        mapPosition: {}\r\n      }\r\n    ]\r\n  }, config)\r\n  return res\r\n}\r\n","import * as actions from '../../actions/dbActions'\r\nimport { put, call } from 'redux-saga/effects'\r\nimport { addMapPoint, removeMapPoint } from '../../api/db'\r\n\r\nexport function * dbAddPointSaga (sensor) {\r\n  yield put(actions.dbAddPointStart(sensor))\r\n  try {\r\n    yield call(() => addMapPoint(sensor))\r\n    yield put(actions.dbAddPointSuccess(sensor))\r\n  } catch (error) {\r\n    yield put(actions.dbAddPointFail(sensor, error))\r\n  }\r\n}\r\n\r\nexport function * dbRemovePointSaga (sensor) {\r\n  yield put(actions.dbRemovePointStart(sensor))\r\n  try {\r\n    yield call(() => removeMapPoint(sensor))\r\n    yield put(actions.dbRemovePointSuccess(sensor))\r\n  } catch (error) {\r\n    yield put(actions.dbRemovePointFail(sensor, error))\r\n  }\r\n}\r\n","import { takeLatest } from 'redux-saga/effects'\r\nimport { dbAddPointSaga, dbRemovePointSaga } from './dbInteractionSaga'\r\nimport actionTypes from '../../../common/constants/actionTypes'\r\n\r\nexport function * watchDB () {\r\n  yield takeLatest(actionTypes.DB_ADD_POINT, dbAddPointSaga)\r\n  yield takeLatest(actionTypes.DB_REMOVE_POINT, dbRemovePointSaga)\r\n}\r\n","import axios from 'axios'\r\n\r\nexport function * fetchNotifications () {\r\n  const res = yield axios.get('/api/v1/notifications')\r\n  return res.data\r\n}\r\n\r\nexport function * checkNotifications (notification) {\r\n  const result = yield axios.delete(`/api/v1/notifications/${notification.id}`)\r\n  return result\r\n}\r\n","import actionTypes from '../../../common/constants/actionTypes'\r\n\r\nexport const fetchNotificationsRequest = () => ({\r\n  type: actionTypes.NOTIFICATIONS_FETCH_REQUEST\r\n})\r\n\r\nexport const fetchNotificationsSuccess = notifications => ({\r\n  type: actionTypes.NOTIFICATIONS_FETCH_SUCCESS,\r\n  notifications\r\n})\r\n\r\nexport const fetchNotificationsError = error => ({\r\n  type: actionTypes.NOTIFICATIONS_FETCH_FAIL,\r\n  error\r\n})\r\n\r\nexport const openNotificationDrawer = () => ({\r\n  type: actionTypes.NOTIFICATION_DRAWER_OPEN\r\n})\r\n\r\nexport const closeNotificationDrawer = () => ({\r\n  type: actionTypes.NOTIFICATION_DRAWER_CLOSE\r\n})\r\n\r\nexport const checkNotifications = (id) => ({\r\n  type: actionTypes.NOTIFICATIONS_CHECK,\r\n  id\r\n})\r\n\r\nexport const checkNotificationsStart = (notification) => ({\r\n  type: actionTypes.NOTIFICATIONS_CHECK_START,\r\n  notification\r\n})\r\n\r\nexport const checkNotificationsSuccess = notifications => ({\r\n  type: actionTypes.NOTIFICATIONS_CHECK_SUCCESS,\r\n  notifications\r\n})\r\n\r\nexport const checkNotificationsFail = (notifications, error) => ({\r\n  type: actionTypes.NOTIFICATIONS_CHECK_FAIL,\r\n  notifications,\r\n  error\r\n})\r\n\r\nexport const updateNotifications = () => ({\r\n  type: actionTypes.NOTIFICATIONS_UPDATE\r\n})\r\n\r\nexport const updateNotificationsSuccess = notifications => ({\r\n  type: actionTypes.NOTIFICATIONS_UPDATE_SUCCESS,\r\n  notifications\r\n})\r\n\r\nexport const updateNotificationsFail = error => ({\r\n  type: actionTypes.NOTIFICATIONS_UPDATE_FAIL,\r\n  error\r\n})\r\n","import { put, call, select, delay } from 'redux-saga/effects'\r\nimport { fetchNotifications, checkNotifications } from '../../api/notification'\r\nimport {\r\n  fetchNotificationsSuccess,\r\n  fetchNotificationsError,\r\n  updateNotificationsSuccess,\r\n  updateNotificationsFail,\r\n  checkNotificationsSuccess,\r\n  checkNotificationsStart,\r\n  checkNotificationsFail\r\n} from '../../actions/notification'\r\n\r\nconst sortNotifications = notifications => notifications.sort((a, b) => b.timestamp - a.timestamp)\r\n\r\nexport function * fetchNotificationsSaga () {\r\n  try {\r\n    const result = yield call(fetchNotifications)\r\n    yield put(fetchNotificationsSuccess(sortNotifications(result)))\r\n  } catch (error) {\r\n    yield put(fetchNotificationsError(error))\r\n  }\r\n}\r\n\r\nexport function * updateNotificationsSaga () {\r\n  while (true) {\r\n    yield delay(5000)\r\n    try {\r\n      const result = yield call(fetchNotifications)\r\n      const { checking } = (yield select()).notification\r\n      !checking && (yield put(updateNotificationsSuccess(sortNotifications(result))))\r\n    } catch (error) {\r\n      yield put(updateNotificationsFail(error))\r\n    }\r\n  }\r\n}\r\n\r\nexport function * checkNotificationsSaga (action) {\r\n  const store = yield select()\r\n  const { notifications } = store.notification\r\n  const checked = notifications.filter(n => n.id === action.id)[0]\r\n  yield put(checkNotificationsStart(checked))\r\n  try {\r\n    yield call(checkNotifications, checked)\r\n    notifications[notifications.indexOf(checked)].isChecked = true\r\n    yield put(checkNotificationsSuccess(notifications))\r\n  } catch (error) {\r\n    yield put(checkNotificationsFail(notifications, error))\r\n  }\r\n}\r\n","import { takeLatest } from 'redux-saga/effects'\r\nimport actionTypes from '../../../common/constants/actionTypes'\r\nimport {\r\n  fetchNotificationsSaga, checkNotificationsSaga, updateNotificationsSaga\r\n} from './notificationSagas'\r\n\r\nexport function * watchNotifications () {\r\n  yield takeLatest(actionTypes.NOTIFICATIONS_FETCH_REQUEST, fetchNotificationsSaga)\r\n  yield takeLatest(actionTypes.NOTIFICATIONS_UPDATE, updateNotificationsSaga)\r\n  yield takeLatest(actionTypes.NOTIFICATIONS_CHECK, checkNotificationsSaga)\r\n}\r\n","import { all } from 'redux-saga/effects'\r\nimport { watchHome } from '../../data/sagas/homeSaga'\r\nimport { watchSensors } from '../../data/sagas/sensor'\r\nimport { watchDB } from '../../data/sagas/db'\r\nimport { watchNotifications } from '../../data/sagas/notification'\r\n\r\n// Here should be added future sagas watchers\r\nexport default function * rootSaga () {\r\n  yield all([\r\n    watchHome(),\r\n    watchSensors(),\r\n    watchDB(),\r\n    watchNotifications()\r\n  ])\r\n}\r\n","import 'regenerator-runtime/runtime'\r\nimport { applyMiddleware, createStore, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootReducer from './redux/reducer/index'\r\nimport rootSaga from './redux/saga/index'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n    : applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nimport { useSnackbar } from 'notistack'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 50\r\n  },\r\n  root: {\r\n    background: 'white'\r\n  },\r\n  whiteColor: {\r\n    color: 'white'\r\n  },\r\n  select: {\r\n    padding: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nexport default function LanguageSelect () {\r\n  const { i18n } = useTranslation()\r\n  const { closeSnackbar } = useSnackbar()\r\n\r\n  const [language, setLanguage] = React.useState(i18n.language)\r\n\r\n  const changeLanguage = lang => {\r\n    if (lang === language) { return }\r\n    window.localStorage.setItem('language', lang)\r\n    i18n.changeLanguage(lang)\r\n    setLanguage(lang)\r\n    closeSnackbar()\r\n  }\r\n\r\n  if (i18n.language !== 'en' && i18n.language !== 'pl') { // unknown language, fallback to en\r\n    changeLanguage('en')\r\n  }\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <FormControl className={classes.formControl} variant='outlined'>\r\n      <Select\r\n        value={language}\r\n        onChange={(e) => changeLanguage(e.target.value)}\r\n        displayEmpty\r\n        classes={{\r\n          root: classes.whiteColor,\r\n          icon: classes.whiteColor,\r\n          select: classes.select\r\n        }}\r\n        inputProps={{\r\n          'data-testid': 'lang-menu'\r\n        }}\r\n      >\r\n        <MenuItem value='en'>EN</MenuItem>\r\n        <MenuItem value='pl'>PL</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n","import LanguageSelect from './LanguageSelect.jsx'\r\n\r\nexport default LanguageSelect\r\n","const timeConverter = timestamp => new Date(timestamp * 1000).toLocaleString()\r\n\r\nexport default timeConverter\r\n","import { useTranslation } from 'react-i18next'\r\n\r\nconst divideSensors = (sensors) => {\r\n  const connectedSensors = {}\r\n  const notConnectedSensors = {}\r\n  for (const key in sensors) {\r\n    connectedSensors[key] = sensors[key].filter(sensor => sensor.mapPosition !== undefined && sensor.mapPosition.x !== undefined && sensor.mapPosition.y !== undefined)\r\n    notConnectedSensors[key] = sensors[key].filter(sensor => sensor.mapPosition === undefined || sensor.mapPosition.x === undefined || sensor.mapPosition.y === undefined)\r\n  }\r\n\r\n  return { connectedSensors, notConnectedSensors }\r\n}\r\n\r\nconst isSensorsListEmpty = (sensorsList) => {\r\n  for (const key in sensorsList) {\r\n    if (sensorsList[key] && sensorsList[key].length > 0) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction ItemDisplayedName ({ sensorType }) {\r\n  const { t } = useTranslation()\r\n\r\n  const getSensorDisplayedName = (type) => {\r\n    const sensorNames = {\r\n      TEMPERATURE_SENSOR: t('dashboard:temperature-sensor-name'),\r\n      windowSensor: t('dashboard:window-sensor-name'),\r\n      windowBlind: t('dashboard:window-blind-name'),\r\n      stoveSensor: t('dashboard:stove-sensor-name'),\r\n      smokeSensor: t('dashboard:smoke-sensor-name'),\r\n      LED_CONTROLLER: t('dashboard:RGB-light-name'),\r\n      led: t('dashboard:RGB-light-name'),\r\n    }\r\n\r\n    return !sensorNames[type] ? t('unknown-sensor') : sensorNames[type]\r\n  }\r\n\r\n  return getSensorDisplayedName(sensorType)\r\n}\r\n\r\nexport {\r\n  divideSensors,\r\n  isSensorsListEmpty,\r\n  ItemDisplayedName\r\n}\r\n","const sensorsInfo = {\r\n  TEMPERATURE_SENSOR: {\r\n    color: 'HSL(36, 87%, 52%)',\r\n    colorLight: 'HSL(30, 100%, 90%)',\r\n    colorDark: 'HSL(30, 100%, 30%)'\r\n  },\r\n  windowSensor: {\r\n    color: 'HSL(216, 87%, 52%)',\r\n    colorLight: 'HSL(260, 100%, 95%)',\r\n    colorDark: 'HSL(260, 100%, 35%)'\r\n  },\r\n  windowBlind: {\r\n    color: 'HSL(94, 65%, 44%)',\r\n    colorLight: 'HSL(332, 70%, 90%)',\r\n    colorDark: 'HSL(332, 70%, 30%)'\r\n  },\r\n  stoveSensor: {\r\n    color: 'HSL(4, 100%, 60%)',\r\n    colorLight: 'HSL(4, 100%, 96%)',\r\n    colorDark: 'HSL(4, 100%, 46%)'\r\n  },\r\n  smokeSensor: {\r\n    color: 'HSL(0, 0%, 50%)',\r\n    colorLight: 'HSL(0, 0%, 80%)',\r\n    colorDark: 'HSL(0, 0%, 20%)'\r\n  },\r\n  LED_CONTROLLER: {\r\n    color: 'HSL(336, 87%, 52%)',\r\n    colorLight: 'HSL(129, 59%, 85%)',\r\n    colorDark: 'HSL(129, 59%, 12%)'\r\n  },\r\n  led: {\r\n    color: 'HSL(336, 87%, 52%)'\r\n  },\r\n}\r\n\r\nexport default sensorsInfo\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  size: {\r\n    fontSize: '2.15vh'\r\n  }\r\n}))\r\n\r\nexport default function LightSensorInner () {\r\n  const classes = useStyles()\r\n  return <FontAwesomeIcon icon={faLightbulb} className={classes.size} />\r\n}\r\n","import React from 'react'\r\nimport MemoryIcon from '@material-ui/icons/Memory'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  size: {\r\n    fontSize: '3.1vh'\r\n  }\r\n}))\r\n\r\nexport default function StoveSensorInner () {\r\n  const classes = useStyles()\r\n  return <MemoryIcon className={classes.size} />\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSmog } from '@fortawesome/free-solid-svg-icons'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  size: {\r\n    fontSize: '1.95vh'\r\n  },\r\n  smokePulse: {\r\n    color: 'rgba(235, 49, 52, 1)',\r\n    animationName: '$pulse',\r\n    animationDuration: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationTimingFunction: 'linear'\r\n  },\r\n  '@keyframes pulse': {\r\n    '0%': {\r\n      transform: 'scale(1.0)'\r\n    },\r\n    '25%': {\r\n      transform: 'scale(0.87)'\r\n    },\r\n    '50%': {\r\n      transform: 'scale(1.0)'\r\n    },\r\n    '75%': {\r\n      transform: 'scale(1.06)'\r\n    },\r\n    '100%': {\r\n      transform: 'scale(1.0)'\r\n    }\r\n  }\r\n})\r\n\r\nexport default function SmokeSensorInner ({ isSmokeDetected = false }) {\r\n  const classes = useStyles()\r\n\r\n  return <FontAwesomeIcon data-testid='smoke-sensor-inner' icon={faSmog} className={isSmokeDetected ? `${classes.smokePulse} ${classes.size}` : classes.size} />\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  temperature: props => ({\r\n    fontSize: props.fontSize,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    verticalAlign: 'center'\r\n  })\r\n}))\r\n\r\nexport default function TemperatureSensorInner ({ temperature = 15 }) {\r\n  temperature = temperature.toString()\r\n\r\n  const getFontSize = temperature => {\r\n    if (temperature.length === 6) {\r\n      return '1.1vh'\r\n    } else if (temperature.length === 5) {\r\n      return '1.2vh'\r\n    } else if (temperature.length === 4) {\r\n      return '1.3vh'\r\n    } else if (temperature.length === 3) {\r\n      return '1.5vh'\r\n    } else if (temperature.length === 2 || temperature.length === 1) {\r\n      return '1.85vh'\r\n    } else {\r\n      return '0rem'\r\n    }\r\n  }\r\n\r\n  const classes = useStyles({ fontSize: getFontSize(temperature) })\r\n\r\n  return (\r\n    <Typography className={classes.temperature}>\r\n      {temperature}\r\n    </Typography>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSquareFull } from '@fortawesome/free-solid-svg-icons'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  container: {\r\n    position: 'relative'\r\n  },\r\n  inner: {\r\n    fontSize: '2.9vh',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  },\r\n  blind: props => ({\r\n    fontSize: '2vh',\r\n    clipPath: `polygon(0 0, 100% 0, 100% ${props.position}%, 0 ${props.position}%)`\r\n  })\r\n}))\r\n\r\nexport default function WindowBlindsSensorInner ({ position = 50 }) {\r\n  const getBlindPositionToDisplay = (position) => {\r\n    if (position > 87) return 0\r\n    else if (position > 62) return 25\r\n    else if (position > 37) return 50\r\n    else if (position > 12) return 75\r\n    else if (position >= 0) return 100\r\n  }\r\n\r\n  const classes = useStyles({ position: getBlindPositionToDisplay(position) })\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <CheckBoxOutlineBlankIcon className={classes.inner} />\r\n      <FontAwesomeIcon data-testid='blind-icon' icon={faSquareFull} className={`${classes.inner} ${classes.blind}`} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport BorderAllIcon from '@material-ui/icons/BorderAll'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  size: {\r\n    fontSize: '2.85vh'\r\n  }\r\n}))\r\n\r\nexport default function WindowSensorInner ({ status = 'closed' }) {\r\n  const classes = useStyles()\r\n  return status === 'open' ? <LaunchIcon data-testid='window-sensor-launch-icon' className={classes.size} /> : <BorderAllIcon data-testid='border-all-icon' className={classes.size} />\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faThermometerEmpty, faThermometerQuarter, faThermometerHalf, faThermometerThreeQuarters, faThermometerFull } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  size: {\r\n    fontSize: '2.8vh'\r\n  }\r\n}))\r\n\r\nexport default function TemperatureSensorIcon ({ temperature = 15 }) {\r\n  const classes = useStyles()\r\n\r\n  const getTemperatureIcon = () => {\r\n    if (temperature < 0) return faThermometerEmpty\r\n    else if (temperature < 10) return faThermometerQuarter\r\n    else if (temperature < 20) return faThermometerHalf\r\n    else if (temperature < 30) return faThermometerThreeQuarters\r\n    else return faThermometerFull\r\n  }\r\n\r\n  return <FontAwesomeIcon icon={getTemperatureIcon()} className={classes.size} />\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  size: {\r\n    fontSize: '2vh'\r\n  }\r\n}))\r\n\r\nexport default function UnknownSensorIcon () {\r\n  const classes = useStyles()\r\n  return <FontAwesomeIcon icon={faQuestion} className={classes.size} />\r\n}\r\n","import React from 'react'\r\n\r\nimport LightSensorIcon from './SensorGraphics/LightSensorIcon'\r\nimport StoveSensorIcon from './SensorGraphics/StoveSensorIcon'\r\nimport SmokeSensorIcon from './SensorGraphics/SmokeSensorIcon'\r\nimport TemperatureSensorValue from './SensorGraphics/TemperatureSensorValue'\r\nimport WindowBlindsSensorIcon from './SensorGraphics/WindowBlindsSensorIcon'\r\nimport WindowSensorIcon from './SensorGraphics/WindowSensorIcon'\r\nimport TemperatureSensorIcon from './SensorGraphics/TemperatureSensorIcon'\r\nimport UnknownSensorIcon from './SensorGraphics/UnknownSensorIcon'\r\n\r\nexport function drawSensorGraphicComponent (sensorType, sensorData) {\r\n  const SensorGraphicComponent = {\r\n    TEMPERATURE_SENSOR: <TemperatureSensorValue temperature={sensorData && sensorData.value} />,\r\n    windowSensor: <WindowSensorIcon status={sensorData && sensorData.status} />,\r\n    windowBlind: <WindowBlindsSensorIcon position={sensorData && sensorData.position} />,\r\n    stoveSensor: <StoveSensorIcon />,\r\n    smokeSensor: <SmokeSensorIcon isSmokeDetected={sensorData && sensorData.isSmokeDetected} />,\r\n    LED_CONTROLLER: <LightSensorIcon />,\r\n    led: <LightSensorIcon />,\r\n    TEMPERATURE_SENSOR_ICON: <TemperatureSensorIcon temperature={sensorData && sensorData.value} />,\r\n  }\r\n  return SensorGraphicComponent[sensorType] || <UnknownSensorIcon />\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ListItem, ListItemText, IconButton, ListItemSecondaryAction, ListItemAvatar, Paper } from '@material-ui/core'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport timeConverter from './timeConverter'\r\nimport { ItemDisplayedName } from '../../Dashboard/SensorsList/helpers'\r\nimport sensorsInfo from '../../../common/constants/sensorsInfo'\r\n\r\nimport { drawSensorGraphicComponent } from '../../Dashboard/SmartHomeMap/Map/Sensor/SensorGraphicComponent.jsx'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  id: {\r\n    fontStyle: 'italic'\r\n  },\r\n  sensor: {\r\n    fontWeight: 'bold'\r\n  },\r\n  icon: props => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transform: 'scale(1.24)',\r\n    minWidth: '30px',\r\n    textAlign: 'center',\r\n    marginRight: '1rem',\r\n    color: props.accentColor\r\n  }),\r\n  elevation: props => ({\r\n    transform: props.clicked ? 'scale(1.04)' : '',\r\n    transition: 'transform 0.2s ease',\r\n    margin: '5px',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  })\r\n}))\r\n\r\nconst NotificationDrawerItem = ({ notification: { id, timestamp, sensorId, isChecked }, handleNotificationCheck, sensorType, clicked, handleClick }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const accentColor = sensorsInfo[sensorType] ? sensorsInfo[sensorType].color : 'black'\r\n  const props = { accentColor, clicked }\r\n  const classes = useStyles(props)\r\n\r\n  const checkButton = !isChecked && (\r\n    <ListItemSecondaryAction>\r\n      <IconButton\r\n        role='check-notification'\r\n        aria-label='close'\r\n        color='inherit'\r\n        className={classes.close}\r\n        onClick={event => {\r\n          handleNotificationCheck(id, event)\r\n          event.stopPropagation()\r\n        }}\r\n        onKeyDown={event => {\r\n          handleNotificationCheck(id, event)\r\n          event.stopPropagation()\r\n        }}\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n    </ListItemSecondaryAction>\r\n  )\r\n\r\n  const displayedInfo = sensorType ? <ItemDisplayedName sensorType={sensorType} /> : t('unknown-sensor')\r\n\r\n  return (\r\n    <Paper\r\n      className={classes.elevation}\r\n      elevation={clicked ? 6 : 2}\r\n      square\r\n      onClick={handleClick}\r\n    >\r\n      <ListItem key={id} data-testid='drawer-item' disabled={isChecked} className={classes.row}>\r\n        <ListItemAvatar className={classes.icon}>\r\n          {drawSensorGraphicComponent(sensorType === 'TEMPERATURE_SENSOR' ? 'TEMPERATURE_SENSOR_ICON' : sensorType)}\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={\r\n            <div>\r\n              <span className={classes.sensor}>\r\n                {displayedInfo}\r\n              </span>\r\n              <span className={classes.id}>{sensorId > 0 ? ` ${sensorId}` : ''}</span>\r\n            </div>\r\n          }\r\n          secondary={timeConverter(timestamp)}\r\n        />\r\n        {checkButton}\r\n      </ListItem>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default NotificationDrawerItem\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport NotificationDrawerItem from './NotificationDrawerItem.jsx'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  list: {\r\n    margin: 'auto',\r\n    width: '95%'\r\n  }\r\n}))\r\n\r\nconst NotificationDrawerList = ({ notifications, handleNotificationCheck, sensors }) => {\r\n  const classes = useStyles()\r\n\r\n  const [clicked, setClicked] = useState(null)\r\n  const handleClick = (id) => {\r\n    setClicked(clicked === id ? null : id)\r\n  }\r\n\r\n  return (\r\n    <div role='presentation' data-testid='notification-list'>\r\n      <List className={classes.list}>\r\n        {notifications.map(notification => (\r\n          <NotificationDrawerItem\r\n            key={notification.id}\r\n            notification={notification}\r\n            handleNotificationCheck={handleNotificationCheck}\r\n            sensorType={notification.type}\r\n            clicked={clicked === notification.id}\r\n            handleClick={() => handleClick(notification.id)}\r\n          />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationDrawerList\r\n","import NotificationDrawer from './NotificationDrawer.jsx'\r\n\r\nexport default NotificationDrawer\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n  Drawer,\r\n  Divider,\r\n  Typography,\r\n  Box\r\n} from '@material-ui/core'\r\nimport NotificationDrawerList from './NotificationDrawerList.jsx'\r\nimport {\r\n  fetchNotificationsRequest,\r\n  closeNotificationDrawer,\r\n  checkNotifications,\r\n  updateNotifications\r\n} from '../../../data/actions/notification'\r\n\r\nconst NotificationDrawer = ({ uncheckedNotifications }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fetchError,\r\n    isDrawerOpen,\r\n    updateError\r\n  } = useSelector(state => state.notification)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotificationsRequest())\r\n    dispatch(updateNotifications())\r\n  }, [])\r\n\r\n  const handleDrawerClose = () => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return\r\n    }\r\n    dispatch(closeNotificationDrawer())\r\n  }\r\n\r\n  const handleNotificationCheck = (id, event) => {\r\n    if ((event.type === 'keydown' && event.key === 'Enter') || event.type === 'click') {\r\n      dispatch(checkNotifications(id))\r\n    }\r\n  }\r\n\r\n  const drawerContent = (\r\n    uncheckedNotifications.length === 0 &&\r\n      <Box pt={3} align='center'>\r\n        <Typography variant='overline' data-testid='no-new-notifications'>\r\n          {t('no-new-notifications')}\r\n        </Typography>\r\n      </Box>) || (\r\n    (updateError || fetchError) &&\r\n      <Box pt={3} align='center'>\r\n        <Typography variant='overline' data-testid='something-went-wrong'>\r\n          {t('something-went-wrong')}\r\n        </Typography>\r\n      </Box>) ||\r\n        <NotificationDrawerList\r\n          notifications={uncheckedNotifications}\r\n          handleNotificationCheck={handleNotificationCheck}\r\n        />\r\n\r\n  return (\r\n    <div>\r\n      <Drawer anchor='right' open={isDrawerOpen} onClose={handleDrawerClose()}>\r\n        <Box py={1} px={3} align='center'>\r\n          <Typography variant='overline'>\r\n            <Link to='/notifications' style={{ textDecoration: 'none' }} onClick={handleDrawerClose()} data-testid='link-notification-history'>\r\n              {t('notification-history')}\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n        <Divider />\r\n        {drawerContent}\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationDrawer\r\n","export const notificationFilter = notifications => {\r\n  const uncheckedNotifications = notifications.filter(notification => !notification.isChecked)\r\n  const checkedNotifications = notifications.filter(notification => notification.isChecked)\r\n  return { checkedNotifications, uncheckedNotifications }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport LanguageSelect from '../../../UI/LanguageSelect'\r\nimport { openNotificationDrawer } from '../../../../data/actions/notification'\r\nimport { useTranslation } from 'react-i18next'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport NotificationDrawer from '../../../UI/NotificationDrawer'\r\nimport { notificationFilter } from '../../../Notifications/notificationFilter'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  tabs: {\r\n    flexGrow: 1,\r\n    minHeight: theme.spacing(7)\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    textAlign: 'right',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    minHeight: theme.spacing(7)\r\n  },\r\n  toolbar: {\r\n    paddingTop: '3px',\r\n    minHeight: theme.spacing(6),\r\n    alignItems: 'baseline'\r\n  }\r\n}))\r\n\r\nfunction LinkTab (props) {\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction checkActive (url) {\r\n  const sites = {\r\n    '/': 0,\r\n  }\r\n  return sites[url]\r\n}\r\n\r\nexport default function Header () {\r\n  const classes = useStyles()\r\n  const location = useLocation()\r\n\r\n  const { checkedNotifications, uncheckedNotifications } = useSelector((state) => notificationFilter(state.notification.notifications))\r\n  const { t } = useTranslation()\r\n\r\n  const [value, setValue] = useState(checkActive(location.pathname))\r\n  useEffect(() => { setValue(checkActive(location.pathname)) }, [location.pathname])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const handleDrawerOpen = () => {\r\n    dispatch(openNotificationDrawer())\r\n  }\r\n\r\n  return (\r\n    <AppBar position='static' data-testid='header-id'>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant='h6' className={classes.title}>\r\n            Smart Kitchen\r\n        </Typography>\r\n        <Tabs\r\n          edge='start'\r\n          className={classes.tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label='Navigation tabs'\r\n          indicatorColor='secondary'\r\n          centered\r\n        >\r\n          <LinkTab label={t('nav-dashboard')} to='/' data-testid='dashboard-tab-id' />\r\n        </Tabs>\r\n        <Box\r\n          className={classes.buttons}\r\n        >\r\n          <LanguageSelect />\r\n          <IconButton\r\n            data-testid='drawer-open'\r\n            aria-label='notifications'\r\n            color='inherit'\r\n            onClick={handleDrawerOpen}\r\n          >\r\n            <Badge\r\n              badgeContent={uncheckedNotifications.length}\r\n              overlap='circle'\r\n              color='secondary'\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <NotificationDrawer uncheckedNotifications={uncheckedNotifications} checkedNotifications={checkedNotifications} />\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import Header from './Header.jsx'\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport Header from '../Header'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navigation: {\r\n    zIndex: 100\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}))\r\n\r\nconst Navigation = () => {\r\n  const classes = useStyles()\r\n  const match = useRouteMatch('/authors/:id')\r\n  return (\r\n    <Grid\r\n      item xs={12}\r\n      className={match ? classes.hide : classes.navigation}\r\n    >\r\n      <Header />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import Navigation from './Navigation.jsx'\r\n\r\nexport default Navigation\r\n","import WarningSnackbar from './WarningSnackbar.jsx'\r\n\r\nexport default WarningSnackbar\r\n","import { useEffect } from 'react'\r\nimport { useSnackbar } from 'notistack'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst WarningSnackbar = ({ pingEndpoint }) => {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n  const { t } = useTranslation()\r\n\r\n  let key\r\n  const status = [408, 502, 504]\r\n\r\n  const handleSnackbarEnqueueing = () => {\r\n    if (!key) {\r\n      key = enqueueSnackbar(t('connection-warning'), {\r\n        variant: 'warning',\r\n        persist: true,\r\n        onExiting: () => { key = null }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSnackbarClosing = () => {\r\n    if (key) {\r\n      closeSnackbar(key)\r\n      key = null\r\n    }\r\n  }\r\n\r\n  const showSnackbar = (error) => {\r\n    !error.response || status.includes(error.response.status)\r\n      ? handleSnackbarEnqueueing()\r\n      : console.error(error)\r\n  }\r\n\r\n  const checkConnection = function () {\r\n    if (!navigator.onLine) {\r\n      handleSnackbarEnqueueing()\r\n    } else {\r\n      pingEndpoint()\r\n        .then(() => handleSnackbarClosing())\r\n        .catch(showSnackbar)\r\n    }\r\n  }\r\n\r\n  let interval\r\n  useEffect(() => {\r\n    checkConnection()\r\n    interval = setInterval(() => checkConnection(), 10000)\r\n    return () => {\r\n      handleSnackbarClosing()\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => window.addEventListener('offline', () => handleSnackbarEnqueueing()))\r\n  useEffect(() => window.addEventListener('online', () => handleSnackbarClosing()))\r\n\r\n  return null\r\n}\r\n\r\nexport default WarningSnackbar\r\n","import React from 'react'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}))\r\n\r\nexport default function CustomSnackbarProvider (props) {\r\n  const classes = useStyles()\r\n\r\n  const notistackRef = React.createRef()\r\n  const onClickDismiss = key => () => {\r\n    notistackRef.current.closeSnackbar(key)\r\n  }\r\n\r\n  return (\r\n    <SnackbarProvider\r\n      ref={notistackRef}\r\n      maxSnack={3}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left'\r\n      }}\r\n      action={(key) => (\r\n        <IconButton\r\n          aria-label='close'\r\n          color='inherit'\r\n          className={classes.close}\r\n          onClick={onClickDismiss(key)}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      )}\r\n      preventDuplicate\r\n    >\r\n      {props.children}\r\n    </SnackbarProvider>\r\n  )\r\n}\r\n","import CustomSnackbarProvider from './CustomSnackbarProvider.jsx'\r\n\r\nexport default CustomSnackbarProvider\r\n","import React from 'react'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport Navigation from '../components/Navigation/NavigationBar/Navigation'\r\nimport WarningSnackbar from '../components/UI/Snackbars/ConnectionWarningSnackbar'\r\nimport axios from 'axios'\r\nimport CustomSnackbarProvider from '../components/UI/Snackbars/CustomSnackbarProvider'\r\n\r\nconst pingApiEndpoint = () => axios.get('/.well-known/health-check', { timeout: 5000 })\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh'\r\n  },\r\n  content: {\r\n    height: 'calc(100vh - 64px)', \r\n    boxSizing: 'border-box',\r\n    backgroundColor: theme.palette.background.default\r\n  }\r\n}))\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Layout = ({ children }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid container maxwidth='xs' className={classes.root} data-testid='dashboard-id'>\r\n      <CustomSnackbarProvider>\r\n        <WarningSnackbar pingEndpoint={pingApiEndpoint} />\r\n        <Navigation />\r\n        <Grid container maxwidth='xs' className={classes.content}>\r\n          {children}\r\n        </Grid>\r\n      </CustomSnackbarProvider>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import actionTypes from '../../common/constants/actionTypes'\r\n\r\n/**\r\n * Returns action after list click.\r\n *\r\n * @param {string} id         sensor id\r\n * @param {string} color      color in hex\r\n * @param {string} sensorData sensor info\r\n * @returns Action for mapListCommunication reducer.\r\n */\r\nexport function onListClick (id, color, sensorData, isOnMap) {\r\n  return {\r\n    type: actionTypes.LIST_CLICKED,\r\n    id,\r\n    sensorColor: color,\r\n    sensorData,\r\n    isOnMap\r\n  }\r\n}\r\n\r\n/**\r\n * Returns action after map click.\r\n *\r\n * @returns Action for mapListCommunication reducer.\r\n */\r\nexport function onMapClick () {\r\n  return {\r\n    type: actionTypes.MAP_CLICKED\r\n  }\r\n}\r\n\r\nexport function onPointClick (id, sensorBorderColor) {\r\n  return {\r\n    type: actionTypes.POINT_CLICKED,\r\n    id,\r\n    sensorBorderColor: sensorBorderColor\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/house.294d87b9.svg\";","const convertHsvToHsl = (h, s, v) => {\r\n  const l = (2 - s / 100) * v / 2\r\n\r\n  if (l !== 0) {\r\n    if (l === 100) {\r\n      s = 0\r\n    } else if (l < 50) {\r\n      s = s * v / (l * 2)\r\n    } else {\r\n      s = s * v / (200 - l * 2)\r\n    }\r\n  }\r\n\r\n  return [h, s, l]\r\n}\r\n\r\nexport { convertHsvToHsl }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { onPointClick } from '../../../../../data/actions/mapListCommunicationActions.js'\r\nimport { Paper } from '@material-ui/core'\r\nimport { convertHsvToHsl } from './helpers'\r\n\r\nimport { drawSensorGraphicComponent } from './SensorGraphicComponent.jsx'\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  container: props => ({\r\n    boxSizing: 'border-box',\r\n    width: props.width,\r\n    height: props.height,\r\n    backgroundColor: 'white',\r\n    border: `${props.borderSize}px solid ${props.sensorBorderColor}`,\r\n    transform: props.clicked ? 'scale(1.2)' : '',\r\n    transition: 'transform 0.2s ease',\r\n    zIndex: props.clicked ? '2' : '1',\r\n    top: props.position.top,\r\n    left: props.position.left,\r\n    position: props.position.position,\r\n    borderRadius: '50%',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  })\r\n}))\r\n\r\nconst Sensor = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    sensorData,\r\n    position,\r\n    sensorSize\r\n  } = props\r\n\r\n  const id = sensorData.id\r\n  const type = sensorData.type\r\n\r\n  const mapListCommunication = useSelector((state) => {\r\n    return state.mapListCommunication\r\n  })\r\n\r\n  const scrollToListItem = (id) => {\r\n    const item = document.querySelector(`#sensor${id}`)\r\n    item.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  function clickDispatch (borderColor) {\r\n    scrollToListItem(id)\r\n    dispatch(onPointClick(\r\n      id,\r\n      borderColor\r\n    ))\r\n  }\r\n\r\n  const getLightColor = () => {\r\n    const hsl = convertHsvToHsl(sensorData.hue, sensorData.saturation, sensorData.value)\r\n\r\n    return `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`\r\n  }\r\n\r\n  const isLightSensor = type === 'LED_CONTROLLER'\r\n  const sensorBorderColor = isLightSensor ? getLightColor() : '#444'\r\n  const clicked = id === mapListCommunication.pressedItemId\r\n\r\n  const classes = useStyles({\r\n    sensorBorderColor: sensorBorderColor,\r\n    clicked: clicked,\r\n    sensorSize: sensorSize,\r\n    width: sensorSize.width || '20px',\r\n    height: sensorSize.height || '20px',\r\n    position: position,\r\n    borderSize: isLightSensor ? 4 : 2\r\n  })\r\n\r\n  return (\r\n    <Paper\r\n      elevation={clicked ? 8 : 0}\r\n      className={classes.container}\r\n      data-testid='sensor-id'\r\n      onClick={() => clickDispatch(sensorBorderColor)}\r\n    >\r\n      {drawSensorGraphicComponent(type, sensorData)}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nSensor.propTypes = {\r\n  name: PropTypes.string,\r\n  sensorSize: PropTypes.shape({\r\n    width: PropTypes.number,\r\n    height: PropTypes.number\r\n  }),\r\n  position: PropTypes.shape({\r\n    position: PropTypes.string\r\n  }),\r\n  sensorColor: PropTypes.string\r\n}\r\n\r\nexport default Sensor\r\n","import Sensor from './Sensor.jsx'\r\n\r\nexport default Sensor\r\n","import MapModal from './MapModal.jsx'\r\n\r\nexport default MapModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst MapModal = (props) => {\r\n  const { t } = useTranslation()\r\n  const { open = false, onClose, title, content } = props\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      data-testid='modal-test-id'\r\n      aria-labelledby='simple-modal-title'\r\n      aria-describedby='simple-modal-description'\r\n    >\r\n      <DialogTitle id='alert-dialog-title'>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id='alert-dialog-description'>\r\n          {content}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color='primary' autoFocus>\r\n          {t('dashboard:map-modal-close')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nMapModal.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string\r\n}\r\n\r\nexport default MapModal\r\n","/** Distance defined in percent in which new point can't be located. */\r\nconst POINT_LOCATION_TOLERANCE = 4\r\n\r\n/**\r\n* Changes point relative coordinates to map's percentage dependence.\r\n*\r\n* @param {number} offset Horizontal or vertical offset related to map component.\r\n* @param {number} mapSize Current map horizontal or vertical size.\r\n* @returns {number} Point position expressed in percentage.\r\n*/\r\nconst fromCoordinateToPercentMapper = (offset, mapSize) => {\r\n  return (offset) / mapSize * 100\r\n}\r\n\r\n/**\r\n* Changes point's percentage position to coordinates related to map.\r\n*\r\n* @param {number} offset Horizontal or vertical offet related to map component defined in percent.\r\n* @param {number} mapSize Current map horizontal or vertical size.\r\n* @returns {number} Point position expressed in map's offset coordinates.\r\n*/\r\nconst fromPercentToCoordinateMapper = (offset, mapSize) => {\r\n  return (offset) * mapSize / 100\r\n}\r\n\r\n/**\r\n* Checks if point could be applied to specific location depending on point location's tolerance.\r\n*\r\n* @param {number} x Vertical coordinate.\r\n* @param {number} y Horizontal coordinate.\r\n* @returns {Object | undefined} Undefined if new point can be added or existing point.\r\n*/\r\nconst isFieldOccupied = (x, y, points) => {\r\n  return points.filter((point) => (\r\n    Math.abs(point.x - x) < POINT_LOCATION_TOLERANCE &&\r\n      Math.abs(point.y - y) < POINT_LOCATION_TOLERANCE))[0]\r\n}\r\n\r\n/** Checks if point object has obligatory properties.\r\n *\r\n * @param {any} point\r\n *\r\n * @returns {boolean} true if point properties are valid\r\n*/\r\nconst validPointData = (point) => {\r\n  return Object.prototype.hasOwnProperty.call(point, 'mapPosition') &&\r\n    Object.prototype.hasOwnProperty.hasOwnProperty.call(point.mapPosition, 'x') &&\r\n    Object.prototype.hasOwnProperty.hasOwnProperty.call(point.mapPosition, 'y')\r\n}\r\n\r\nexport {\r\n  fromCoordinateToPercentMapper,\r\n  fromPercentToCoordinateMapper,\r\n  isFieldOccupied,\r\n  validPointData\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport sensorsInfo from '../../../../common/constants/sensorsInfo'\r\nimport { onMapClick } from '../../../../data/actions/mapListCommunicationActions.js'\r\nimport house from '../../../../common/assets/house.svg'\r\nimport Sensor from '../../../../components/Dashboard/SmartHomeMap/Map/Sensor'\r\nimport MapModal from '../../../../components/Dashboard/SmartHomeMap/Map/MapModal'\r\nimport { loadSensors, updateSensors } from '../../../../data/actions/sensor/sensorActions.js'\r\nimport { dbAddPoint, dbUpdateAddErrorPoints, dbUpdateRemoveErrorPoints } from '../../../../data/actions/dbActions.js'\r\nimport {\r\n  fromCoordinateToPercentMapper,\r\n  fromPercentToCoordinateMapper,\r\n  isFieldOccupied,\r\n  validPointData\r\n} from './helpers'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { useSnackbar } from 'notistack'\r\n\r\n/** Defines how many times sensor is smaller than map. */\r\nconst SENSOR_COEFFICIENT = 20\r\n\r\nconst useStyles = makeStyles((props) => ({\r\n  container: {\r\n    position: 'relative'\r\n  },\r\n  image: props => ({\r\n    cursor: props.mapDisabled\r\n      ? 'cell'\r\n      : props.pointPressed ? 'pointer' : 'not-allowed',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    minWidth: '100%',\r\n    maxHeight: 'calc(100vh - 150px)'\r\n  })\r\n}))\r\n\r\nconst newMapSensors = (nonMappedSensors, _id) => {\r\n  return Object.values(nonMappedSensors).map((sensorGroup) => (sensorGroup.map((sensor) => {\r\n    sensor.id === _id && delete sensor.mapPosition\r\n    return sensor\r\n  })))\r\n}\r\n\r\nconst HomeMap = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const picRef = useRef(null)\r\n\r\n  const [mapHeight, setMapHeight] = useState(null)\r\n  const [mapWidth, setMapWidth] = useState(null)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [isMapReady, setMapReady] = useState(false)\r\n\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const nonMappedSensors = useSelector((state) => state.sensor.sensors)\r\n  const mapListCommunication = useSelector((state) => state.mapListCommunication)\r\n  const { _id, addError, addErrorPoints, removeSuccess, removeErrorPoints } = useSelector((state) => state.dbInteraction)\r\n\r\n  /**\r\n   * Transfroms sensors from store to appropriate format.\r\n   *\r\n   * @returns {Array} array od sensors objects: { x: number, y: number }\r\n   */\r\n  const sensors = useSelector((state) => {\r\n    const { sensors } = state.sensor\r\n    return Object.keys(sensors).map(key => sensors[key]).flat().filter(sensor => sensor.mapPosition)\r\n  })\r\n\r\n  const checkListSensorClicked = () => sensors.filter(s => s.id === mapListCommunication.pressedItemId).length === 1\r\n\r\n  const classes = useStyles({\r\n    mapDisabled:\r\n      mapListCommunication.waitingForSensorLocation,\r\n    pointPressed: mapListCommunication.mapPointPressed || checkListSensorClicked()\r\n  })\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(loadSensors())\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (addError !== undefined) {\r\n      addErrorPoints.forEach(p => {\r\n        enqueueSnackbar(t('dashboard:sensor-add-failed', { id: p }), {\r\n          variant: 'error'\r\n        })\r\n        dispatch(dbUpdateAddErrorPoints(p))\r\n      })\r\n\r\n      const newSensors = Object.values(nonMappedSensors).map((sensorGroup) => (sensorGroup.map((sensor) => {\r\n        addErrorPoints.includes(sensor.id) && delete sensor.mapPosition\r\n        return sensor\r\n      })))\r\n      dispatch(updateSensors(newSensors))\r\n    }\r\n  }, [addError])\r\n\r\n  useEffect(() => {\r\n    if (removeSuccess && removeErrorPoints.length !== 0) {\r\n      const newSensors = newMapSensors(nonMappedSensors, _id)\r\n      dispatch(updateSensors(newSensors))\r\n      dispatch(dbUpdateRemoveErrorPoints(_id))\r\n    }\r\n  }, [removeSuccess])\r\n\r\n  useEffect(() => {\r\n    function handleResize () {\r\n      if (picRef !== null && picRef.current !== null) {\r\n        const { height, width } = picRef.current\r\n        setMapHeight(height)\r\n        setMapWidth(width)\r\n        setMapReady(true)\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  /**\r\n  * Adds point to array if possible.\r\n  *\r\n  * @param e Mouse click event.\r\n  */\r\n  const addNewSensor = (e) => {\r\n    if (mapListCommunication.mapPointPressed || checkListSensorClicked()) {\r\n      dispatch(onMapClick())\r\n    }\r\n    if (!mapListCommunication.waitingForSensorLocation) {\r\n      return\r\n    }\r\n\r\n    const { offsetX = 0, offsetY = 0 } = e.nativeEvent\r\n\r\n    /** Offset defined in map's width in percent. */\r\n    const xCoordinate = fromCoordinateToPercentMapper(offsetX, mapWidth)\r\n    /** Offset defined in map's height in percent. */\r\n    const yCoordinate = fromCoordinateToPercentMapper(offsetY, mapHeight)\r\n    /** Sensors fetched from store and mapper to appropriate format. */\r\n\r\n    const storeSensors = sensors\r\n      .map((sensor) => Object.assign(sensor, { x: sensor.mapPosition.x, y: sensor.mapPosition.y }))\r\n\r\n    /** Checks if point could be located in specific position on map. */\r\n    if (isFieldOccupied(xCoordinate, yCoordinate, storeSensors)) {\r\n      setModalOpen(true)\r\n      return\r\n    }\r\n\r\n    dispatch(onMapClick())\r\n\r\n    let clickedSensor\r\n    const newSensors = Object.values(nonMappedSensors).map((sensorGroup) => (\r\n      sensorGroup.map((sensor) => {\r\n        if (sensor.id === mapListCommunication.sensorData.id && sensor.type === mapListCommunication.sensorData.type) {\r\n          clickedSensor = sensor\r\n          return { ...sensor, mapPosition: { x: xCoordinate, y: yCoordinate } }\r\n        }\r\n        return sensor\r\n      })\r\n    ))\r\n\r\n    dispatch(updateSensors(newSensors))\r\n    dispatch(dbAddPoint({ _id: clickedSensor.id, type: clickedSensor.type, mapPosition: { x: xCoordinate, y: yCoordinate } }))\r\n  }\r\n\r\n  /** Function sets starting map size after image loading. **/\r\n  function setOnLoadMapSize () {\r\n    const { height, width } = picRef.current\r\n    setMapReady(true)\r\n    setMapHeight(height)\r\n    setMapWidth(width)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <img\r\n        data-testid='image-id'\r\n        ref={picRef}\r\n        onClick={addNewSensor}\r\n        src={house}\r\n        alt='Home plan'\r\n        className={classes.image}\r\n        onLoad={setOnLoadMapSize}\r\n      />\r\n      {\r\n        isMapReady ? sensors\r\n          .map((point) => (\r\n            validPointData(point) &&\r\n              <Sensor\r\n                sensorData={point}\r\n                data-testid='sensor-id'\r\n                key={point.id}\r\n                sensorSize={\r\n                  { width: Math.round(mapHeight / SENSOR_COEFFICIENT), height: Math.round(mapHeight / SENSOR_COEFFICIENT) }\r\n                }\r\n                position={{\r\n                  top: fromPercentToCoordinateMapper(point.mapPosition.y, mapHeight) - Math.round(mapHeight / SENSOR_COEFFICIENT) / 2,\r\n                  left: fromPercentToCoordinateMapper(point.mapPosition.x, mapWidth) - Math.round(mapHeight / SENSOR_COEFFICIENT) / 2,\r\n                  position: 'absolute'\r\n                }}\r\n                sensorColor={'black' && sensorsInfo[point.type] && sensorsInfo[point.type].color}\r\n              />\r\n          ))\r\n          : null\r\n      }\r\n\r\n      <MapModal\r\n        data-testid='modal-test-id'\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        title={t('dashboard:map-modal-title')}\r\n        content={t('dashboard:map-modal-content')}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMap\r\n","import Map from './Map.jsx'\r\n\r\nexport default Map\r\n","import React from 'react'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport Map from './Map'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  mapBackground: {\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  mapContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    maxWidth: '100%',\r\n    height: 'calc(100vh - 64px)',\r\n    objectFit: 'contain'\r\n  }\r\n}))\r\n\r\nconst SmartHomeMap = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid\r\n      item xs={9} className={classes.mapBackground}\r\n      container\r\n      justify='center'\r\n      alignItems='center'\r\n    >\r\n      <div className={classes.mapContainer}>\r\n        <Map />\r\n      </div>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SmartHomeMap\r\n","import SmartHomeMap from './SmartHomeMap.jsx'\r\n\r\nexport default SmartHomeMap\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function LightItemInfo ({ sensorData, classes, handleRemoveClick }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      {t('dashboard:light-hue')}: {sensorData.hue} <br />\r\n      {t('dashboard:light-saturation')}: {sensorData.saturation} <br />\r\n      {t('dashboard:light-value')}: {sensorData.value} <br />\r\n    </>\r\n  )\r\n}\r\n","import { useTranslation } from 'react-i18next'\r\n\r\nexport default function StoveSensorItemInfo ({ sensorData, classes, handleRemoveClick }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      {t('dashboard:stove-power')}: {sensorData.power ? \"ON\" : \"OFF\"} <br />\r\n      {sensorData.power && (\r\n        <>\r\n          {`${t('dashboard:stove-timer')}: ${sensorData.timer.min * 10}m`} <br />\r\n          {`${t('dashboard:temperature')}: ${sensorData.temperature}°C`} <br /> \r\n          {`${t('dashboard:watt')}: ${sensorData.watt}W`} <br /> \r\n          {t('dashboard:stove-mode')}: {sensorData.mode} <br />\r\n        </>\r\n      )}    \r\n    </>\r\n  )\r\n}","import { useTranslation } from 'react-i18next'\r\n\r\nexport default function SmokeSensorItemInfo ({ sensorData, classes, handleRemoveClick }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    sensorData.isSmokeDetected ? t('dashboard:smoke-detected') : t('dashboard:smoke-not-detected')\r\n  )\r\n}\r\n","import { useTranslation } from 'react-i18next'\r\n\r\nexport default function TemperatureSensorItemInfo ({ sensorData, classes, handleRemoveClick }) {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    `${t('dashboard:temperature')}: ${sensorData.value}°C`\r\n  )\r\n}\r\n","import { useTranslation } from 'react-i18next'\r\n\r\nexport default function WindowBlindsItemInfo ({ sensorData, classes, handleRemoveClick }) {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    `${t('dashboard:blinds-position')}: ${sensorData.position}%`\r\n  )\r\n}\r\n","import { useTranslation } from 'react-i18next'\r\n\r\nexport default function WindowSensorItem ({ sensorData, classes, handleRemoveClick }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    sensorData.status === 'open' ? t('dashboard:window-open') : t('dashboard:window-closed')\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeLightSensorDetails } from '../../../../data/actions/sensor'\r\nimport { convertHsvToHsl } from '../../SmartHomeMap/Map/Sensor/helpers'\r\n\r\nconst hsv = (h, s, v) => {\r\n  const hsl = convertHsvToHsl(h, s, v)\r\n  return `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  hueSlider: props => ({\r\n    backgroundImage: `linear-gradient(to right, ${hsv(0, props.saturation, props.value)} 0%, ${hsv(60, props.saturation, props.value)} 17%, ${hsv(120, props.saturation, props.value)} 33%, ${hsv(180, props.saturation, props.value)} 50%, ${hsv(240, props.saturation, props.value)} 67%, ${hsv(300, props.saturation, props.value)} 83%, ${hsv(360, props.saturation, props.value)} 100%)`\r\n  }),\r\n  saturationSlider: props => ({\r\n    backgroundImage: `linear-gradient(to right, #808080, ${hsv(props.hue, props.saturation, props.value)})`\r\n  }),\r\n  valueSlider: props => ({\r\n    backgroundImage: `linear-gradient(to right, #000000, ${hsv(props.hue, props.saturation, props.value)})`\r\n  }),\r\n  button: props => ({\r\n    backgroundColor: hsv(props.hue, props.saturation, props.value),\r\n    '&:hover': {\r\n      backgroundColor: hsv(props.hue, props.saturation, props.value)\r\n    },\r\n    transition: 'all 0s ease',\r\n    marginTop: 16,\r\n    padding: 15\r\n  })\r\n})\r\n\r\nconst CustomSlider = withStyles(theme => ({\r\n  root: {\r\n    height: 15,\r\n    padding: '0',\r\n    marginBottom: 5,\r\n    marginTop: 0,\r\n    outline: `1px outset ${theme.palette.primary.main}`\r\n  },\r\n  rail: {\r\n    height: 0\r\n  },\r\n  thumb: {\r\n    height: 17,\r\n    width: 0,\r\n    borderLeft: '6px solid transparent',\r\n    borderRight: '6px solid transparent',\r\n    borderTop: `6px solid ${theme.palette.primary.main}`,\r\n    borderBottom: `6px solid ${theme.palette.secondary.main}`,\r\n    borderRadius: '5%',\r\n    backgroundColor: 'transparent',\r\n    marginLeft: -6,\r\n    marginTop: -1\r\n  }\r\n}))(Slider)\r\n\r\nconst CustomButton = withStyles(theme => ({\r\n  contained: {\r\n    color: theme.palette.getContrastText(theme.palette.background.paper),\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}))(Button)\r\n\r\nexport default function LightItemInfo ({ sensorData, handleChangeExpanded }) {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const [hue, setHue] = useState(sensorData.hue)\r\n  const [saturation, setSaturation] = useState(sensorData.saturation)\r\n  const [value, setValue] = useState(sensorData.value)\r\n  const [originalSensorData, setOriginalSensorData] = useState(sensorData)\r\n  const classes = useStyles({ hue, saturation, value })\r\n\r\n  useEffect(() => {\r\n    const hasSensorDataChanged = sensorData.hue !== originalSensorData.hue ||\r\n        sensorData.value !== originalSensorData.value ||\r\n        sensorData.saturation !== originalSensorData.saturation\r\n\r\n    if (hasSensorDataChanged) {\r\n      setHue(sensorData.hue)\r\n      setSaturation(sensorData.saturation)\r\n      setValue(sensorData.value)\r\n      setOriginalSensorData(sensorData)\r\n    }\r\n  })\r\n\r\n  const dispatchLightDetailsChange = () => {\r\n    const lightSensorDetails = {\r\n      id: sensorData.id,\r\n      type: sensorData.type,\r\n      hue,\r\n      saturation,\r\n      value\r\n    }\r\n    dispatch(changeLightSensorDetails(lightSensorDetails))\r\n    handleChangeExpanded()()\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Typography id='hue' gutterBottom>\r\n          {t('dashboard:light-hue')}\r\n        </Typography>\r\n        <CustomSlider\r\n          className={classes.hueSlider}\r\n          value={hue}\r\n          onChange={(e, val) => { setHue(val) }}\r\n          aria-labelledby='hue'\r\n          valueLabelDisplay='auto'\r\n          min={0}\r\n          max={359}\r\n          track={false}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Typography id='saturation' gutterBottom>\r\n          {t('dashboard:light-saturation')}\r\n        </Typography>\r\n        <CustomSlider\r\n          className={classes.saturationSlider}\r\n          value={saturation}\r\n          onChange={(e, val) => { setSaturation(val) }}\r\n          aria-labelledby='saturation'\r\n          valueLabelDisplay='auto'\r\n          min={0}\r\n          max={100}\r\n          track={false}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Typography id='value' gutterBottom>\r\n          {t('dashboard:light-value')}\r\n        </Typography>\r\n        <CustomSlider\r\n          className={classes.valueSlider}\r\n          value={value}\r\n          onChange={(e, val) => { setValue(val) }}\r\n          aria-labelledby='value'\r\n          valueLabelDisplay='auto'\r\n          min={0}\r\n          max={100}\r\n          track={false}\r\n        />\r\n      </div>\r\n      <Box display='flex' justifyContent='center'>\r\n        <Button\r\n          component='div'\r\n          className={classes.button} variant='outlined'\r\n        >\r\n          <CustomButton\r\n            variant='contained'\r\n            onClick={dispatchLightDetailsChange}\r\n          >\r\n            <span className={classes.buttonText}>\r\n              {t('dashboard:sensor-detail-confirm')}\r\n            </span>\r\n          </CustomButton>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeWindowBlindsSensorDetails } from '../../../../data/actions/sensor'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nexport default function WindowBlindsItemDetails ({ sensorData, handleChangeExpanded }) {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [position, setPosition] = useState(sensorData.position)\r\n  const [originalSensorData, setOriginalSensorData] = useState(sensorData)\r\n\r\n  useEffect(() => {\r\n    const hasSensorDataChanged = originalSensorData.position !== sensorData.position\r\n    if (hasSensorDataChanged) {\r\n      setPosition(sensorData.position)\r\n      setOriginalSensorData(sensorData)\r\n    }\r\n  })\r\n\r\n  const dispatchWindowBlindsDetailsChange = () => {\r\n    const windowBlindsDetails = {\r\n      id: sensorData.id,\r\n      type: sensorData.type,\r\n      position: position\r\n    }\r\n    dispatch(changeWindowBlindsSensorDetails(windowBlindsDetails))\r\n    handleChangeExpanded()()\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Typography id='value' gutterBottom>\r\n          {t('dashboard:blinds-position')}\r\n        </Typography>\r\n        <Slider\r\n          defaultValue={0}\r\n          value={position}\r\n          onChange={(e, val) => { setPosition(val) }}\r\n          aria-labelledby='value'\r\n          valueLabelDisplay='auto'\r\n          min={0}\r\n          max={100}\r\n        />\r\n      </div>\r\n      <Box display='flex' justifyContent='center'>\r\n        <Button\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={dispatchWindowBlindsDetailsChange}\r\n        >\r\n          {t('dashboard:sensor-detail-confirm')}\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeStoveSensorDetails } from '../../../../data/actions/sensor'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    },\r\n  },\r\n\r\n  textBox: {\r\n    margin: \"9%\",\r\n    width: \"100%\",\r\n    height: 50,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    borderRadius: \"2%\",\r\n    border: \"1px solid #C4C4C4\",\r\n    alignItems: \"center\",\r\n    fontSize: 20,\r\n    fontFamily: \"Arial\"\r\n  }\r\n}))\r\n\r\nconst temperatureLevel = [0, 60, 80, 120, 150, 180, 220, 270]\r\nconst wattLevel = [0, 500, 800, 1000, 1300, 1600, 1900, 2100]\r\n\r\nexport default function StoveItemInfo ({ sensorData, handleChangeExpanded }) {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const [timer, setTimer] = useState(sensorData.timer)\r\n  const [temperature, setTemperature] = useState(sensorData.temperature)\r\n  const [watt, setWatt] = useState(sensorData.watt)\r\n  const [uptime, setUptime] = useState(sensorData.uptime)\r\n  const [power, setPower] = useState(sensorData.power)\r\n  const [level, setLevel] = useState(sensorData.level)\r\n  const [mode, setMode] = useState(sensorData.mode)\r\n  const [overheat, setOverheat] = useState(sensorData.overheat)\r\n  const [originalSensorData, setOriginalSensorData] = useState(sensorData)\r\n  const [radioValue, setRadioValue] = useState(\"°C\")\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    const hasSensorDataChanged = \r\n      sensorData.timer !== originalSensorData.timer\r\n      sensorData.temperature !== originalSensorData.temperature ||\r\n      sensorData.watt !== originalSensorData.watt ||\r\n      sensorData.uptime !== originalSensorData.uptime ||\r\n      sensorData.power !== originalSensorData.power ||\r\n      sensorData.level !== originalSensorData.level ||\r\n      sensorData.mode !== originalSensorData.mode ||\r\n      sensorData.overheat !== originalSensorData.overheat \r\n\r\n    if (hasSensorDataChanged) {\r\n      setTimer(sensorData.timer)\r\n      setTemperature(sensorData.temperature)\r\n      setWatt(sensorData.watt)\r\n      setUptime(sensorData.uptime)\r\n      setPower(sensorData.power)\r\n      setLevel(sensorData.level)\r\n      setMode(sensorData.mode)\r\n      setOverheat(sensorData.overheat)\r\n      setOriginalSensorData(sensorData)\r\n    }\r\n  })\r\n\r\n  const dispatchStoveDetailsChangePower = (index) => {\r\n    const stoveSensorDetails = {\r\n      id: sensorData.id,\r\n      sensorType: sensorData.type,\r\n      timer: timer,\r\n      temperature: temperatureLevel[index],\r\n      watt: wattLevel[index],\r\n      uptime: uptime, \r\n      power: !power,\r\n      level: index,\r\n      mode: mode,\r\n      overheat: overheat\r\n    }\r\n    dispatch(changeStoveSensorDetails(stoveSensorDetails))\r\n  }\r\n\r\n  const dispatchStoveDetailsChangeLevel = (amount) => {\r\n    const stoveSensorDetails = {\r\n      id: sensorData.id,\r\n      sensorType: sensorData.type,\r\n      timer: timer,\r\n      temperature: temperatureLevel[level + amount],\r\n      watt: wattLevel[level + amount],\r\n      uptime: uptime, \r\n      power: power,\r\n      level: level + amount,\r\n      mode: mode,\r\n      overheat: overheat\r\n    }\r\n    dispatch(changeStoveSensorDetails(stoveSensorDetails))\r\n  }\r\n\r\n  const handleRadioChange = (event) => {\r\n    setRadioValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={8}>\r\n          <div className={classes.textBox}>\r\n            {radioValue == \"°C\" ? temperature : watt}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <RadioGroup value={radioValue} onChange={handleRadioChange}>\r\n            <FormControlLabel value=\"°C\" control={<Radio />} label=\"°C\" />\r\n            <FormControlLabel value=\"W\" control={<Radio />} label=\"W\" />\r\n          </RadioGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.buttonGroup}>\r\n        <Button\r\n          component='div'\r\n          variant='outlined'\r\n          onClick={() => {\r\n            setPower(power => {\r\n              var idx = power ? 0 : 1\r\n              setTemperature(temperatureLevel[idx])\r\n              setWatt(wattLevel[idx])\r\n              setLevel(idx)\r\n              dispatchStoveDetailsChangePower(idx)\r\n              return !power\r\n            })\r\n          }}\r\n        >\r\n          {power ? \"OFF\" : \"ON\"}\r\n        </Button>\r\n        <Button\r\n          component='div'\r\n          variant='outlined'\r\n          onClick={() => {\r\n            if (!power) return\r\n            if (level > 1) {\r\n              setLevel(level => {\r\n                setTemperature(temperatureLevel[level - 1])\r\n                setWatt(wattLevel[level - 1])\r\n                dispatchStoveDetailsChangeLevel(-1)\r\n                return level - 1\r\n              })\r\n            }\r\n          }}\r\n        >\r\n          -\r\n        </Button>\r\n        <Button\r\n          component='div'\r\n          variant='outlined'\r\n          onClick={() => {\r\n            if (!power) return\r\n            if (level < 7) {\r\n              setLevel(level => {\r\n                setTemperature(temperatureLevel[level + 1])\r\n                setWatt(wattLevel[level + 1])\r\n                dispatchStoveDetailsChangeLevel(1)\r\n                return level + 1\r\n              })\r\n            }\r\n          }}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/Button'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n\r\nimport { onListClick, onMapClick } from '../../../data/actions/mapListCommunicationActions.js'\r\nimport LightItemInfo from './ItemInfo/LightItemInfo'\r\nimport StoveSensorItemInfo from './ItemInfo/StoveSensorItemInfo'\r\nimport SmokeSensorItemInfo from './ItemInfo/SmokeSensorItemInfo'\r\nimport TemperatureSensorItemInfo from './ItemInfo/TemperatureSensorItemInfo'\r\nimport WindowBlindsItemInfo from './ItemInfo/WindowBlindsItemInfo'\r\nimport WindowSensorItemInfo from './ItemInfo/WindowSensorItemInfo'\r\nimport sensorsInfo from '../../../common/constants/sensorsInfo'\r\nimport { ItemDisplayedName } from './helpers'\r\n\r\nimport LightItemDetails from './ItemDetails/LightItemDetails'\r\nimport WindowBlindsItemDetails from './ItemDetails/WindowBlindsItemDetails'\r\nimport StoveItemDetails from './ItemDetails/StoveItemDetails.js'\r\n\r\nimport { drawSensorGraphicComponent } from '../SmartHomeMap/Map/Sensor/SensorGraphicComponent.jsx'\r\nimport { convertHsvToHsl } from '../SmartHomeMap/Map/Sensor/helpers'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  elevation: props => ({\r\n    transform: props.clicked ? 'scale(1.04)' : '',\r\n    transition: 'transform 0.2s ease',\r\n    margin: '5px'\r\n  }),\r\n  row: props => ({\r\n    padding: '4px 2px'\r\n  }),\r\n  type: props => ({\r\n    fontWeight: 'bold',\r\n    color: 'black'\r\n  }),\r\n  id: {\r\n    fontWeight: '200',\r\n    fontStyle: 'italic'\r\n  },\r\n  item: {\r\n    display: 'flex',\r\n    justifyContent: 'start',\r\n    alignItems: 'center'\r\n  },\r\n  close: props => ({\r\n    padding: theme.spacing(0.5),\r\n    borderRadius: '50%',\r\n    minWidth: 'auto',\r\n    minHeight: 'auto',\r\n    alighItems: 'center',\r\n    justifyContent: 'center',\r\n    display: props.clicked && props.isOnMap ? 'flex' : 'none',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  }),\r\n  icon: props => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transform: 'scale(1.4)',\r\n    minWidth: '30px',\r\n    textAlign: 'center',\r\n    marginRight: '1rem',\r\n    color: props.accentColor\r\n  })\r\n}))\r\n\r\nconst ExpansionPanel = withStyles({\r\n  root: {\r\n    position: 'static',\r\n    overflowX: 'hidden',\r\n    margin: 0,\r\n    '&:before': {\r\n      display: 'none'\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto'\r\n    }\r\n  },\r\n  expanded: {}\r\n})(MuiExpansionPanel)\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiExpansionPanelDetails)\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n  root: {\r\n    padding: 0\r\n  },\r\n  content: {\r\n    margin: 0,\r\n    '&$expanded': {\r\n      margin: '0px 0'\r\n    }\r\n  },\r\n  expanded: {},\r\n  expandIcon: {\r\n    marginLeft: '-16px',\r\n    marginRight: '8px',\r\n    padding: '6px'\r\n  }\r\n})(MuiExpansionPanelSummary)\r\n\r\nfunction drawItemInfo (sensorType, sensorData, classes, handleRemoveClick) {\r\n  const itemInfo = {\r\n    TEMPERATURE_SENSOR: <TemperatureSensorItemInfo sensorData={sensorData} classes={classes} handleRemoveClick={handleRemoveClick} />,\r\n    windowSensor: <WindowSensorItemInfo sensorData={sensorData} classes={classes} handleRemoveClick={handleRemoveClick} />,\r\n    windowBlind: <WindowBlindsItemInfo sensorData={sensorData} classes={classes} handleRemoveClick={handleRemoveClick} />,\r\n    stoveSensor: <StoveSensorItemInfo sensorData={sensorData} classes={classes} handleRemoveClick={handleRemoveClick} />,\r\n    smokeSensor: <SmokeSensorItemInfo sensorData={sensorData} classes={classes} handleRemoveClick={handleRemoveClick} />,\r\n    LED_CONTROLLER: <LightItemInfo sensorData={sensorData} classes={classes} handleRemoveClick={handleRemoveClick} />\r\n  }\r\n  return itemInfo[sensorType]\r\n}\r\n\r\nfunction drawExpansionPanelDetails (sensorType, sensorData, handleChangeExpanded) {\r\n  const itemDetails = {\r\n    windowBlind: <WindowBlindsItemDetails sensorData={sensorData} handleChangeExpanded={handleChangeExpanded} />,\r\n    LED_CONTROLLER: <LightItemDetails sensorData={sensorData} handleChangeExpanded={handleChangeExpanded} />,\r\n    stoveSensor: <StoveItemDetails sensorData={sensorData} handleChangeExpanded={handleChangeExpanded} />\r\n  }\r\n\r\n  if (itemDetails[sensorType]) {\r\n    return (\r\n      <ExpansionPanelDetails>\r\n        {itemDetails[sensorType]}\r\n      </ExpansionPanelDetails>\r\n    )\r\n  }\r\n}\r\n\r\nfunction isSensorEditable (sensorType, isOnMap) {\r\n  return (sensorType === 'LED_CONTROLLER') || (sensorType === 'windowBlind' && isOnMap) || (sensorType === 'stoveSensor')\r\n}\r\n\r\nconst Item = ({ sensorData, isOnMap, handleRemoveClick, expanded, handleChangeExpanded }) => {\r\n  const dispatch = useDispatch()\r\n  const { id, type } = sensorData || { id: '', type: '' }\r\n\r\n  const mapListCommunication = useSelector((state) => {\r\n    return state.mapListCommunication\r\n  })\r\n\r\n  function clickDispatch (sensorColor, sensorData, isOnMap) {\r\n    dispatch(onListClick(\r\n      id,\r\n      sensorColor,\r\n      sensorData,\r\n      isOnMap\r\n    ))\r\n  }\r\n\r\n  const handleListItemClick = (e, clicked) => {\r\n    clicked\r\n      ? dispatch(onMapClick())\r\n      : clickDispatch(accentColor, sensorData, isOnMap)\r\n    if (isSensorEditable(type, true)) {\r\n      if (expanded !== id) {\r\n        handleChangeExpanded()()\r\n      }\r\n      e.stopPropagation()\r\n    }\r\n  }\r\n\r\n  const getLightColor = () => {\r\n    const hsl = convertHsvToHsl(sensorData.hue, sensorData.saturation, sensorData.value)\r\n\r\n    return `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`\r\n  }\r\n\r\n  const bgColor =\r\n    sensorData.id === mapListCommunication.pressedItemId\r\n      ? sensorsInfo[type] && sensorsInfo[type].colorLight : 'white'\r\n  const accentColor = type === 'LED_CONTROLLER' ? getLightColor() : sensorsInfo[type] ? sensorsInfo[type].color : 'black'\r\n  const clicked = sensorData.id === mapListCommunication.pressedItemId\r\n  const props = { accentColor, bgColor, clicked, isOnMap }\r\n  const classes = useStyles(props)\r\n\r\n  const expansionPanelDetails = drawExpansionPanelDetails(type, sensorData, handleChangeExpanded)\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.stopPropagation()\r\n    handleRemoveClick(true)\r\n  }\r\n\r\n  return (\r\n    <Paper\r\n      className={classes.elevation}\r\n      elevation={clicked ? 6 : 0}\r\n    >\r\n      <ExpansionPanel\r\n        square\r\n        className={classes.row}\r\n        expanded={expanded === id}\r\n        onChange={handleChangeExpanded(id)}\r\n      >\r\n        <ExpansionPanelSummary\r\n          expandIcon={isSensorEditable(type, isOnMap) ? <SettingsIcon /> : null}\r\n        >\r\n          <ListItem\r\n            id={`sensor${id}`}\r\n            onClick={(e) => { handleListItemClick(e, clicked) }}\r\n          >\r\n            <ListItemAvatar className={classes.icon}>\r\n              {drawSensorGraphicComponent(type === 'TEMPERATURE_SENSOR' ? 'TEMPERATURE_SENSOR_ICON' : type, sensorData)}\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={\r\n                <>\r\n                  <span className={classes.type}>\r\n                    <ItemDisplayedName sensorType={type} />\r\n                  </span>\r\n                  <span className={classes.id}> {sensorData.id}</span>\r\n                </>\r\n              }\r\n              secondary={\r\n                <span className={classes.item}>\r\n                  {drawItemInfo(type, sensorData, classes, handleRemoveClick)}\r\n                </span>\r\n              }\r\n            />\r\n            <IconButton\r\n              className={classes.close}\r\n              onClick={(e) => handleCloseClick(e)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        </ExpansionPanelSummary>\r\n        {expansionPanelDetails}\r\n      </ExpansionPanel>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nItem.propTypes = {\r\n  sensorData: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    type: PropTypes.string,\r\n    mapPosition: PropTypes.shape({\r\n      x: PropTypes.number,\r\n      y: PropTypes.number\r\n    })\r\n  }),\r\n  isOnMap: PropTypes.bool\r\n}\r\n\r\nexport default Item\r\n","import DeleteModal from './DeleteModal.jsx'\r\n\r\nexport default DeleteModal\r\n","import React from 'react'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { DialogContentText } from '@material-ui/core'\r\n\r\nconst DeleteModal = (props) => {\r\n  const { open = false, handleCancel, handleOk, title, content } = props\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth='xs'\r\n      open={open}\r\n    >\r\n      <DialogTitle>\r\n        {title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {content}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color='primary'>\r\n          {t('dashboard:sensor-remove-cancel')}\r\n        </Button>\r\n        <Button autoFocus onClick={handleOk} color='primary'>\r\n          {t('dashboard:sensor-remove-confirm')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport { Grid } from '@material-ui/core'\r\nimport Item from './Item.jsx'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nimport { refreshSensors } from '../../../data/actions/sensor'\r\nimport DeleteModal from './../../UI/Modals/DeleteModal'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { dbRemovePoint, dbUpdateRemoveErrorPoints } from '../../../data/actions/dbActions.js'\r\nimport { onMapClick } from '../../../data/actions/mapListCommunicationActions.js'\r\nimport { divideSensors, isSensorsListEmpty } from './helpers'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: props => ({\r\n    width: '100%',\r\n    height: props.sidebarHeight + 'px',\r\n    backgroundColor: theme.palette.background.level2\r\n  }),\r\n  list: {\r\n    margin: 'auto',\r\n    width: '95%'\r\n  }\r\n}))\r\n\r\nfunction drawItems (sensors, isOnMap, handleRemoveClick, expanded, handleChangeExpanded) {\r\n  return (Object.keys(sensors).map((keyName) => {\r\n    return (sensors[keyName].map(sensorData => {\r\n      return (\r\n        <Item\r\n          expanded={expanded}\r\n          handleChangeExpanded={handleChangeExpanded}\r\n          isOnMap={isOnMap}\r\n          sensorData={sensorData}\r\n          key={sensorData.id}\r\n          sensorType={keyName}\r\n          handleRemoveClick={handleRemoveClick}\r\n        />\r\n      )\r\n    }))\r\n  }))\r\n}\r\n\r\nexport default function SensorsList () {\r\n  const { t } = useTranslation()\r\n\r\n  const { height } = useWindowSize()\r\n  const sidebarHeight = height - 64\r\n  const classes = useStyles({ sidebarHeight })\r\n  const [activeModal, setActiveModal] = useState(false)\r\n\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshSensors())\r\n  }, [])\r\n\r\n  const { removeErrorPoints, removeError } = useSelector((state) => state.dbInteraction)\r\n  const { pressedItemId, mapPointPressed } = useSelector((state) => state.mapListCommunication)\r\n\r\n  useEffect(() => {\r\n    if (removeError !== undefined) {\r\n      removeErrorPoints.forEach(p => {\r\n        enqueueSnackbar(t('dashboard:sensor-remove-failed', { id: p }), {\r\n          variant: 'error'\r\n        })\r\n        dispatch(dbUpdateRemoveErrorPoints(p))\r\n      })\r\n    }\r\n  }, [removeError])\r\n\r\n  const {\r\n    connectedSensors, notConnectedSensors\r\n  } = useSelector((state) => {\r\n    return divideSensors(state.sensor.sensors)\r\n  })\r\n\r\n  function handleCancel () {\r\n    setActiveModal(false)\r\n  }\r\n\r\n  function handleOk () {\r\n    setActiveModal(false)\r\n    dispatch(dbRemovePoint({ _id: pressedItemId }))\r\n    dispatch(onMapClick())\r\n    handleChangeExpanded()()\r\n  }\r\n\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  const handleChangeExpanded = (panel) => (e, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (mapPointPressed) {\r\n      setExpanded(false)\r\n    }\r\n  }, [mapPointPressed])\r\n\r\n  return (\r\n    <Grid\r\n      item xs={3}\r\n      className={classes.root}\r\n      data-testid='sensors-list'\r\n      style={{ overflow: 'auto' }}\r\n    >\r\n      <List\r\n        className={classes.list}\r\n        data-testid='not-connected-sensors-list'\r\n        subheader={!isSensorsListEmpty(notConnectedSensors) &&\r\n          <ListSubheader\r\n            disableSticky\r\n            className={classes.listSubheader}\r\n            data-testid='notConnected-header'\r\n          >\r\n            {t('dashboard:sensors-not-placed')}\r\n          </ListSubheader>}\r\n      >\r\n        {drawItems(notConnectedSensors, false, setActiveModal, expanded, handleChangeExpanded)}\r\n      </List>\r\n      <List\r\n        className={classes.list}\r\n        data-testid='connected-sensors-list'\r\n        subheader={!isSensorsListEmpty(connectedSensors) &&\r\n          <ListSubheader\r\n            disableSticky\r\n            className={classes.listSubheader}\r\n            data-testid='connected-header'\r\n          >\r\n            {t('dashboard:sensors-placed')}\r\n          </ListSubheader>}\r\n      >\r\n        {drawItems(connectedSensors, true, setActiveModal, expanded, handleChangeExpanded)}\r\n      </List>\r\n      <DeleteModal\r\n        data-testid='delete-modal-test-id'\r\n        open={activeModal}\r\n        handleCancel={handleCancel}\r\n        handleOk={handleOk}\r\n        title={t('dashboard:sensor-remove-modal')}\r\n        content={t('dashboard:sensor-remove-modal-content')}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n","import SensorsList from './SensorsList.jsx'\r\n\r\nexport default SensorsList\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { Box } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n})\r\n\r\nexport default function Spinner () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CircularProgress size={70} />\r\n    </Box>\r\n  )\r\n}\r\n","import Spinner from './Spinner.jsx'\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  errorMessage: {\r\n    marginBottom: '1rem',\r\n    fontSize: '3rem',\r\n    color: '#333',\r\n    textAlign: 'center'\r\n  }\r\n})\r\n\r\nconst handlePageRefresh = () => {\r\n  window.location.reload()\r\n}\r\n\r\nexport default function Page404 () {\r\n  const classes = useStyles()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Box className={classes.root} data-testid='page-404'>\r\n      <Typography component='h2'>\r\n        <Box className={classes.errorMessage}>{t('something-went-wrong')}.</Box>\r\n      </Typography>\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<RefreshIcon />}\r\n        onClick={handlePageRefresh}\r\n      >\r\n        {t('refresh')}\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\n","import Page404 from './Page404.jsx'\r\n\r\nexport default Page404\r\n","import SensorsWarning from './SensorsWarning.jsx'\r\n\r\nexport default SensorsWarning\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useSnackbar } from 'notistack'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function SensorsWarning () {\r\n  const { t } = useTranslation()\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n  const refreshError = useSelector((state) => state.sensor.refreshError)\r\n\r\n  useEffect(() => {\r\n    if (refreshError) {\r\n      enqueueSnackbar(t('dashboard:sensors-refresh-error'), {\r\n        variant: 'warning',\r\n        persist: true,\r\n        key: 'sensors-refresh-error-snackbar'\r\n      })\r\n    } else if (!refreshError) {\r\n      closeSnackbar('sensors-refresh-error-snackbar')\r\n    }\r\n  }, [refreshError])\r\n\r\n  return null\r\n}\r\n","import Dashboard from './Dashboard.jsx'\r\n\r\nexport default Dashboard\r\n","import React, { useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadSensors } from '../../data/actions/sensor'\r\n\r\nimport SmartHomeMap from './SmartHomeMap'\r\nimport SensorsList from './SensorsList'\r\nimport Spinner from '../UI/Spinner'\r\nimport Page404 from '../UI/Page404'\r\nimport SensorsWarning from '../UI/Snackbars/SensorsWarning'\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(loadSensors())\r\n  }, [])\r\n\r\n  const {\r\n    loadingSensors,\r\n    loadingError\r\n  } = useSelector((state) => state.sensor)\r\n\r\n  let content = <Spinner />\r\n\r\n  if (!loadingSensors) {\r\n    if (!loadingError) {\r\n      content = (\r\n        <Grid container maxwidth='xs' data-testid='dashboard-content-id'>\r\n          <SensorsWarning />\r\n          <SmartHomeMap />\r\n          <SensorsList />\r\n        </Grid>\r\n      )\r\n    } else {\r\n      content = <Page404 />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {content}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n  makeStyles,\r\n  Grid,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { checkNotifications } from '../../data/actions/notification'\r\nimport { loadSensors } from '../../data/actions/sensor'\r\nimport NotificationDrawerList from '../UI/NotificationDrawer/NotificationDrawerList.jsx'\r\nimport Page404 from '../UI/Page404'\r\nimport Spinner from '../UI/Spinner'\r\nimport { notificationFilter } from './notificationFilter'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  title: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  container: {\r\n    overflow: 'auto',\r\n    maxHeight: '100%'\r\n  }\r\n\r\n}))\r\n\r\nconst Notifications = () => {\r\n  const classes = useStyles()\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n\r\n  const [loadUnchecked, setLoadUnchecked] = React.useState(0)\r\n  const [loadChecked, setLoadChecked] = React.useState(0)\r\n  const [loadCount, setLoadCount] = React.useState(20)\r\n  const [display, setDisplay] = React.useState('')\r\n\r\n  useEffect(() => { dispatch(loadSensors()) }, [])\r\n\r\n  const {\r\n    fetching,\r\n    fetchError,\r\n    updateError\r\n  } = useSelector(state => state.notification)\r\n  const { uncheckedNotifications, checkedNotifications } = useSelector(state => notificationFilter(state.notification.notifications))\r\n  const { sensors } = useSelector(state => state.sensor)\r\n  const sensorArray = Object.values(sensors).flat()\r\n\r\n  const showMore = numberNotificationsToShow => {\r\n    let numberOfUnchecked\r\n    let numberOfChecked\r\n    let displayShowMore\r\n    if (uncheckedNotifications.length >= numberNotificationsToShow) {\r\n      numberOfUnchecked = numberNotificationsToShow\r\n      numberOfChecked = 0\r\n    } else {\r\n      numberOfUnchecked = uncheckedNotifications.length\r\n      numberOfChecked = numberNotificationsToShow - numberOfUnchecked\r\n    }\r\n    if (uncheckedNotifications.length + checkedNotifications.length <= numberNotificationsToShow) {\r\n      displayShowMore = 'none'\r\n    } else {\r\n      displayShowMore = 'block'\r\n    }\r\n    return { numberOfUnchecked, numberOfChecked, displayShowMore }\r\n  }\r\n  const { numberOfUnchecked, numberOfChecked, displayShowMore } = showMore(loadCount)\r\n\r\n  useEffect(() => {\r\n    setLoadUnchecked(numberOfUnchecked)\r\n    setLoadChecked(numberOfChecked)\r\n    setDisplay(displayShowMore)\r\n  }, [showMore])\r\n\r\n  const handleNotificationCheck = (id, event) => {\r\n    if ((event.type === 'keydown' && event.key === 'Enter') || event.type === 'click') {\r\n      dispatch(checkNotifications(id))\r\n    }\r\n  }\r\n\r\n  const handleShowMore = () => {\r\n    if (uncheckedNotifications.length + checkedNotifications.length <= loadCount) { setDisplay('none') }\r\n    const showMore = loadCount + 20\r\n    setLoadCount(showMore)\r\n  }\r\n\r\n  const uncheckedNotificationListContent =\r\n    (updateError && (\r\n      <Box pt={3} align='center'>\r\n        <Typography variant='overline' data-testid='something-went-wrong'>\r\n          {t('something-went-wrong')}\r\n        </Typography>\r\n      </Box>)) ||\r\n    (uncheckedNotifications.length === 0 && (\r\n      <Box pt={3} align='center'>\r\n        <Typography variant='overline' data-testid='no-new-notifications'>\r\n          {t('no-new-notifications')}\r\n        </Typography>\r\n      </Box>)) ||\r\n      (\r\n        <NotificationDrawerList\r\n          notifications={uncheckedNotifications.slice(0, loadUnchecked)}\r\n          handleNotificationCheck={handleNotificationCheck}\r\n          sensors={sensorArray}\r\n        />\r\n      )\r\n\r\n  const checkedNotificationListContent = checkedNotifications.length > 0 && loadChecked > 0 && (\r\n    <Box>\r\n      <Typography align='center' variant='h6' className={classes.title}>\r\n        {t('inactive')}\r\n      </Typography>\r\n      <Divider />\r\n      <NotificationDrawerList\r\n        notifications={checkedNotifications.slice(0, loadChecked)}\r\n        sensors={sensorArray}\r\n      />\r\n    </Box>)\r\n\r\n  return (\r\n    <Grid\r\n      container justify='center'\r\n      className={classes.container}\r\n    >\r\n      {fetchError ? <Page404 />\r\n        : fetching ? <Spinner />\r\n          : (\r\n            <Grid\r\n              item xs={4}\r\n            >\r\n              <Typography align='center' variant='h6' className={classes.title}>\r\n                {t('notifications')}\r\n              </Typography>\r\n              <Divider />\r\n              {uncheckedNotificationListContent}\r\n              {checkedNotificationListContent}\r\n              <Box pb={3} align='center' display={display}>\r\n                <Button variant='outlined' onClick={handleShowMore} display={display}>\r\n                  {t('show-more-button')}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","import Notifications from './Notifications.jsx'\r\n\r\nexport default Notifications\r\n","import commonEN from './en/common.json'\r\nimport dashboardEN from './en/dashboard.json'\r\n\r\nimport commonPL from './pl/common.json'\r\nimport dashboardPL from './pl/dashboard.json'\r\n\r\nexport default {\r\n  en: {\r\n    common: commonEN,\r\n    dashboard: dashboardEN,\r\n  },\r\n  pl: {\r\n    common: commonPL,\r\n    dashboard: dashboardPL,\r\n  }\r\n}\r\n","import { initReactI18next } from 'react-i18next'\r\nimport i18n from 'i18next'\r\n\r\nimport translations from './common/locales'\r\n\r\nconst ns = {\r\n  namespaces: ['common', 'dashboard']\r\n}\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng: window.localStorage.getItem('language') || navigator.language.slice(0, 2),\r\n    fallbackLng: 'en',\r\n    // debug: true,\r\n    ns,\r\n    defaultNS: 'common',\r\n    resources: translations,\r\n    react: {\r\n      useSuspense: false\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  })\r\n\r\nexport default i18n\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3e3e3e'\r\n    },\r\n    secondary: {\r\n      main: '#ffc400'\r\n    },\r\n    contrastThreshold: 3,\r\n    background: {\r\n      default: '#fafafa',\r\n      paper: '#fff',\r\n      levelHalf: '#fdfdfd',\r\n      level1: '#fafafa',\r\n      level2: '#f6f6f6'\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport Layout from './views/Layout.jsx'\r\nimport Dashboard from './components/Dashboard'\r\nimport Notifications from './components/Notifications'\r\nimport './i18n'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport theme from './common/constants/theme'\r\n\r\nconst App = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <Layout>\r\n      <Switch>\r\n        <Route path='/notifications' component={Notifications} />\r\n        <Route path='/' exact component={Dashboard} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    </Layout>\r\n  </ThemeProvider>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './index.css'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport store from './store'\r\n\r\nimport App from './app'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <Route component={App} />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}